{
  "hash": "c7d2657e8c7addad92b66dc95d899a18",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Regular expression with R\"\ndate: 2023-06-8\n# date-modified: 2023-04-05\ncategories:\n  - r\n  - regex\nimage: reg.png\n---\n\n\n\n\n\nRegular expressions are also called regex or regexp. A regex is a text string that defines a search pattern. Regex can be used to manipulate and extract information from text strings. Regex are universally supported din many programming languages like R, Python, Java and SQL.\n\n\n- grep(), grepl() – return the indices of strings containing a match (grep()) or a logical vector showing which strings contain a match (grepl()).\n- regexpr(), gregexpr() – return the index for each string where the match begins and the length of that match. While regexpr() provides this information only for the first match (from the left), gregexpr() does the same for all the matches.\n- sub(), gsub() – replace a detected match in each string with a specified string (sub() – only for the first match, gsub() – for all the matches).\n- regexec() – works like regexpr() but returns the same information also for a specified sub-expression inside the match.\n- regmatches() – works like regexec() but returns the exact strings detected for the overall match and a specified sub-expression.\n\n![](reg.png)\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}