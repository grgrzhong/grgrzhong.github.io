{
  "hash": "95b35d47251eae01c59ffdb29006b765",
  "result": {
    "markdown": "---\ntitle: \"Customization of Seurat plots using ggplot2\"\ndate: 2023-12-02\ndate-modified: last-modified\ncategories:\n  - seurat\n  - ggplot2\nimage: umap.png\ndescription: The DimPlot, FeaturePlot, Dotplot, VlnPlot, and DoHeatmap from Seurat can be further customized with ggplot2.\n---\n\n\n\n## Packages\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(tidyverse)\nlibrary(Seurat)\nlibrary(SingleR)\nlibrary(ggrepel)\nlibrary(ggthemes)\nlibrary(ggnewscale)\nlibrary(tidyverse)\nlibrary(scCustomize)\nlibrary(viridis)\nlibrary(RColorBrewer)\nlibrary(gridExtra)\nlibrary(ComplexHeatmap)\nlibrary(dittoSeq)\nlibrary(Scillus)\n```\n:::\n\n## UMAP\n\n### Load Seurat object\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### Load data\nload(here(\"learn\", \"2023_scRNA_Seurat\", \"pbmc_tutorial_singleR.RData\"))\nload(here(\"learn\", \"2023_scRNA_Seurat\", \"sce.anno.RData\"))\nload(here(\"learn\", \"2023_scRNA_Seurat\", \"all_markers.RData\"))\ntop5 <- all_markers |> group_by(cluster) |> top_n(5, avg_log2FC)\n\n### Check data\nhead(pbmc, 2)\n##                  orig.ident nCount_RNA nFeature_RNA percent.mt percent.HB\n## AAACATACAACCAC-1     pbmc3k       2419          779   3.017776          0\n## AAACATTGAGCTAC-1     pbmc3k       4903         1352   3.793596          0\n##                  RNA_snn_res.0.5 seurat_clusters  labels\n## AAACATACAACCAC-1               0               0 T_cells\n## AAACATTGAGCTAC-1               3               3  B_cell\nhead(sce2, 2)\n##                         orig.ident nCount_RNA nFeature_RNA percent.mt\n## K16733_AAACATACTCGTTT-1     K16733       2464          965  12.662338\n## K16733_AAAGCAGAACGTTG-1     K16733       7145         1919   2.449265\n##                         percent.rp percent.HB RNA_snn_res.0.5 seurat_clusters\n## K16733_AAACATACTCGTTT-1   13.35227          0              11              11\n## K16733_AAAGCAGAACGTTG-1   36.72498          0               3               3\n##                         sampel sample group    globalC       anno\n## K16733_AAACATACTCGTTT-1    P01    P01    PT        Epi        Epi\n## K16733_AAAGCAGAACGTTG-1    P01    P01    PT Fibroblast Fibroblast\nhead(top5)\n## # A tibble: 6 Ã— 7\n## # Groups:   cluster [2]\n##       p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene      \n##       <dbl>      <dbl> <dbl> <dbl>     <dbl> <fct>   <chr>     \n## 1 2.43e- 67       3.05 0.172 0.079 1.26e- 62 0       REG4      \n## 2 3.38e- 51       3.19 0.069 0.019 1.76e- 46 0       BPIFB1    \n## 3 5.32e- 30       3.71 0.031 0.007 2.76e- 25 0       FABP1     \n## 4 6.37e- 21       2.79 0.018 0.003 3.31e- 16 0       SLC9A4    \n## 5 1.65e- 20       2.70 0.017 0.003 8.56e- 16 0       AC073218.2\n## 6 2.51e-112       3.57 0.132 0.023 1.30e-107 1       SPRR1A\n```\n:::\n\n### Default seurat UMAP\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# View the UMAP\nDimPlot(pbmc, group.by = c(\"seurat_clusters\", \"labels\"), reduction = \"umap\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### UMAP with ggplot2\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Find the UMAP data\nstr(pbmc)\n## Formal class 'Seurat' [package \"SeuratObject\"] with 13 slots\n##   ..@ assays      :List of 1\n##   .. ..$ RNA:Formal class 'Assay' [package \"SeuratObject\"] with 8 slots\n##   .. .. .. ..@ counts       :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots\n##   .. .. .. .. .. ..@ i       : int [1:2238732] 29 73 80 148 163 184 186 227 229 230 ...\n##   .. .. .. .. .. ..@ p       : int [1:2639] 0 779 2131 3260 4220 4741 5522 6304 7094 7626 ...\n##   .. .. .. .. .. ..@ Dim     : int [1:2] 13714 2638\n##   .. .. .. .. .. ..@ Dimnames:List of 2\n##   .. .. .. .. .. .. ..$ : chr [1:13714] \"AL627309.1\" \"AP006222.2\" \"RP11-206L10.2\" \"RP11-206L10.9\" ...\n##   .. .. .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. .. ..@ x       : num [1:2238732] 1 1 2 1 1 1 1 41 1 1 ...\n##   .. .. .. .. .. ..@ factors : list()\n##   .. .. .. ..@ data         :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots\n##   .. .. .. .. .. ..@ i       : int [1:2238732] 29 73 80 148 163 184 186 227 229 230 ...\n##   .. .. .. .. .. ..@ p       : int [1:2639] 0 779 2131 3260 4220 4741 5522 6304 7094 7626 ...\n##   .. .. .. .. .. ..@ Dim     : int [1:2] 13714 2638\n##   .. .. .. .. .. ..@ Dimnames:List of 2\n##   .. .. .. .. .. .. ..$ : chr [1:13714] \"AL627309.1\" \"AP006222.2\" \"RP11-206L10.2\" \"RP11-206L10.9\" ...\n##   .. .. .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. .. ..@ x       : num [1:2238732] 1.64 1.64 2.23 1.64 1.64 ...\n##   .. .. .. .. .. ..@ factors : list()\n##   .. .. .. ..@ scale.data   : num [1:2000, 1:2638] -0.8556 -0.2773 1.4947 -0.0463 -0.4658 ...\n##   .. .. .. .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. .. .. .. ..$ : chr [1:2000] \"ISG15\" \"CPSF3L\" \"MRPL20\" \"ATAD3C\" ...\n##   .. .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. ..@ assay.orig   : NULL\n##   .. .. .. ..@ var.features : chr [1:2000] \"PPBP\" \"LYZ\" \"S100A9\" \"IGLL5\" ...\n##   .. .. .. ..@ meta.features:'data.frame':\t13714 obs. of  5 variables:\n##   .. .. .. .. ..$ vst.mean                 : num [1:13714] 0.00341 0.00114 0.0019 0.00114 0.00682 ...\n##   .. .. .. .. ..$ vst.variance             : num [1:13714] 0.0034 0.00114 0.00189 0.00114 0.00678 ...\n##   .. .. .. .. ..$ vst.variance.expected    : num [1:13714] 0.00365 0.00114 0.00197 0.00114 0.00748 ...\n##   .. .. .. .. ..$ vst.variance.standardized: num [1:13714] 0.933 0.992 0.963 0.992 0.906 ...\n##   .. .. .. .. ..$ vst.variable             : logi [1:13714] FALSE FALSE FALSE FALSE FALSE FALSE ...\n##   .. .. .. ..@ misc         : list()\n##   .. .. .. ..@ key          : chr \"rna_\"\n##   ..@ meta.data   :'data.frame':\t2638 obs. of  8 variables:\n##   .. ..$ orig.ident     : Factor w/ 1 level \"pbmc3k\": 1 1 1 1 1 1 1 1 1 1 ...\n##   .. ..$ nCount_RNA     : num [1:2638] 2419 4903 3147 2639 980 ...\n##   .. ..$ nFeature_RNA   : int [1:2638] 779 1352 1129 960 521 781 782 790 532 550 ...\n##   .. ..$ percent.mt     : num [1:2638] 3.02 3.79 0.89 1.74 1.22 ...\n##   .. ..$ percent.HB     : num [1:2638] 0 0 0 0 0 0 0 0 0 0 ...\n##   .. ..$ RNA_snn_res.0.5: Factor w/ 9 levels \"0\",\"1\",\"2\",\"3\",..: 1 4 3 2 7 3 5 5 5 6 ...\n##   .. ..$ seurat_clusters: Factor w/ 9 levels \"0\",\"1\",\"2\",\"3\",..: 1 4 3 2 7 3 5 5 5 6 ...\n##   .. ..$ labels         : chr [1:2638] \"T_cells\" \"B_cell\" \"T_cells\" \"Monocyte\" ...\n##   ..@ active.assay: chr \"RNA\"\n##   ..@ active.ident: Factor w/ 9 levels \"0\",\"1\",\"2\",\"3\",..: 1 4 3 2 7 3 5 5 5 6 ...\n##   .. ..- attr(*, \"names\")= chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   ..@ graphs      :List of 2\n##   .. ..$ RNA_nn :Formal class 'Graph' [package \"SeuratObject\"] with 7 slots\n##   .. .. .. ..@ assay.used: chr \"RNA\"\n##   .. .. .. ..@ i         : int [1:52760] 0 6 102 203 213 229 292 451 547 618 ...\n##   .. .. .. ..@ p         : int [1:2639] 0 33 50 64 80 87 103 139 155 162 ...\n##   .. .. .. ..@ Dim       : int [1:2] 2638 2638\n##   .. .. .. ..@ Dimnames  :List of 2\n##   .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. ..@ x         : num [1:52760] 1 1 1 1 1 1 1 1 1 1 ...\n##   .. .. .. ..@ factors   : list()\n##   .. ..$ RNA_snn:Formal class 'Graph' [package \"SeuratObject\"] with 7 slots\n##   .. .. .. ..@ assay.used: chr \"RNA\"\n##   .. .. .. ..@ i         : int [1:194424] 0 6 102 136 187 203 229 292 421 446 ...\n##   .. .. .. ..@ p         : int [1:2639] 0 62 120 170 240 287 379 453 533 573 ...\n##   .. .. .. ..@ Dim       : int [1:2] 2638 2638\n##   .. .. .. ..@ Dimnames  :List of 2\n##   .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. ..@ x         : num [1:194424] 1 0.1111 0.1765 0.0811 0.0811 ...\n##   .. .. .. ..@ factors   : list()\n##   ..@ neighbors   : list()\n##   ..@ reductions  :List of 3\n##   .. ..$ pca :Formal class 'DimReduc' [package \"SeuratObject\"] with 9 slots\n##   .. .. .. ..@ cell.embeddings           : num [1:2638, 1:50] -5.84 -2.56 -1.64 13.29 -2.15 ...\n##   .. .. .. .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. .. ..$ : chr [1:50] \"PC_1\" \"PC_2\" \"PC_3\" \"PC_4\" ...\n##   .. .. .. ..@ feature.loadings          : num [1:2000, 1:50] 0.01091 0.11663 0.11569 -0.00853 -0.01632 ...\n##   .. .. .. .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. .. .. .. ..$ : chr [1:2000] \"PPBP\" \"LYZ\" \"S100A9\" \"IGLL5\" ...\n##   .. .. .. .. .. ..$ : chr [1:50] \"PC_1\" \"PC_2\" \"PC_3\" \"PC_4\" ...\n##   .. .. .. ..@ feature.loadings.projected: num[0 , 0 ] \n##   .. .. .. ..@ assay.used                : chr \"RNA\"\n##   .. .. .. ..@ global                    : logi FALSE\n##   .. .. .. ..@ stdev                     : num [1:50] 7.05 4.5 3.87 3.75 3.15 ...\n##   .. .. .. ..@ jackstraw                 :Formal class 'JackStrawData' [package \"SeuratObject\"] with 4 slots\n##   .. .. .. .. .. ..@ empirical.p.values     : num [1:2000, 1:20] 0.0005 0 0 0.0035 0 0 0.01 0 0.0135 0 ...\n##   .. .. .. .. .. .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. .. .. .. .. .. ..$ : chr [1:2000] \"PPBP\" \"LYZ\" \"S100A9\" \"IGLL5\" ...\n##   .. .. .. .. .. .. .. ..$ : chr [1:20] \"PC1\" \"PC2\" \"PC3\" \"PC4\" ...\n##   .. .. .. .. .. ..@ fake.reduction.scores  : num [1:2000, 1:20] -0.003524 0.000285 -0.000627 0.002054 0.000959 ...\n##   .. .. .. .. .. ..@ empirical.p.values.full: logi [1, 1] NA\n##   .. .. .. .. .. ..@ overall.p.values       : num [1:20, 1:2] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. .. .. .. .. .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. .. .. .. .. .. ..$ : NULL\n##   .. .. .. .. .. .. .. ..$ : chr [1:2] \"PC\" \"Score\"\n##   .. .. .. ..@ misc                      :List of 1\n##   .. .. .. .. ..$ total.variance: num 1734\n##   .. .. .. ..@ key                       : chr \"PC_\"\n##   .. ..$ umap:Formal class 'DimReduc' [package \"SeuratObject\"] with 9 slots\n##   .. .. .. ..@ cell.embeddings           : num [1:2638, 1:2] -4.58 -2.81 -1.68 12.69 -9.83 ...\n##   .. .. .. .. ..- attr(*, \"scaled:center\")= num [1:2] -0.0395 -1.1523\n##   .. .. .. .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. .. ..$ : chr [1:2] \"UMAP_1\" \"UMAP_2\"\n##   .. .. .. ..@ feature.loadings          : num[0 , 0 ] \n##   .. .. .. ..@ feature.loadings.projected: num[0 , 0 ] \n##   .. .. .. ..@ assay.used                : chr \"RNA\"\n##   .. .. .. ..@ global                    : logi TRUE\n##   .. .. .. ..@ stdev                     : num(0) \n##   .. .. .. ..@ jackstraw                 :Formal class 'JackStrawData' [package \"SeuratObject\"] with 4 slots\n##   .. .. .. .. .. ..@ empirical.p.values     : num[0 , 0 ] \n##   .. .. .. .. .. ..@ fake.reduction.scores  : num[0 , 0 ] \n##   .. .. .. .. .. ..@ empirical.p.values.full: num[0 , 0 ] \n##   .. .. .. .. .. ..@ overall.p.values       : num[0 , 0 ] \n##   .. .. .. ..@ misc                      : list()\n##   .. .. .. ..@ key                       : chr \"UMAP_\"\n##   .. ..$ tsne:Formal class 'DimReduc' [package \"SeuratObject\"] with 9 slots\n##   .. .. .. ..@ cell.embeddings           : num [1:2638, 1:2] -11.1 -36.27 1.96 37.46 -20.88 ...\n##   .. .. .. .. ..- attr(*, \"dimnames\")=List of 2\n##   .. .. .. .. .. ..$ : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. .. ..$ : chr [1:2] \"tSNE_1\" \"tSNE_2\"\n##   .. .. .. ..@ feature.loadings          : num[0 , 0 ] \n##   .. .. .. ..@ feature.loadings.projected: num[0 , 0 ] \n##   .. .. .. ..@ assay.used                : chr \"RNA\"\n##   .. .. .. ..@ global                    : logi TRUE\n##   .. .. .. ..@ stdev                     : num(0) \n##   .. .. .. ..@ jackstraw                 :Formal class 'JackStrawData' [package \"SeuratObject\"] with 4 slots\n##   .. .. .. .. .. ..@ empirical.p.values     : num[0 , 0 ] \n##   .. .. .. .. .. ..@ fake.reduction.scores  : num[0 , 0 ] \n##   .. .. .. .. .. ..@ empirical.p.values.full: num[0 , 0 ] \n##   .. .. .. .. .. ..@ overall.p.values       : num[0 , 0 ] \n##   .. .. .. ..@ misc                      : list()\n##   .. .. .. ..@ key                       : chr \"tSNE_\"\n##   ..@ images      : list()\n##   ..@ project.name: chr \"pbmc3k\"\n##   ..@ misc        : list()\n##   ..@ version     :Classes 'package_version', 'numeric_version'  hidden list of 1\n##   .. ..$ : int [1:3] 4 0 0\n##   ..@ commands    :List of 10\n##   .. ..$ NormalizeData.RNA       :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"NormalizeData.RNA\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:49:17\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr [1:2] \"NormalizeData(pbmc, normalization.method = \\\"LogNormalize\\\", \" \"    scale.factor = 10000)\"\n##   .. .. .. ..@ params     :List of 5\n##   .. .. .. .. ..$ assay               : chr \"RNA\"\n##   .. .. .. .. ..$ normalization.method: chr \"LogNormalize\"\n##   .. .. .. .. ..$ scale.factor        : num 10000\n##   .. .. .. .. ..$ margin              : num 1\n##   .. .. .. .. ..$ verbose             : logi TRUE\n##   .. ..$ FindVariableFeatures.RNA:Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"FindVariableFeatures.RNA\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:49:18\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"FindVariableFeatures(pbmc, selection.method = \\\"vst\\\", nfeatures = 2000)\"\n##   .. .. .. ..@ params     :List of 12\n##   .. .. .. .. ..$ assay              : chr \"RNA\"\n##   .. .. .. .. ..$ selection.method   : chr \"vst\"\n##   .. .. .. .. ..$ loess.span         : num 0.3\n##   .. .. .. .. ..$ clip.max           : chr \"auto\"\n##   .. .. .. .. ..$ mean.function      :function (mat, display_progress)  \n##   .. .. .. .. ..$ dispersion.function:function (mat, display_progress)  \n##   .. .. .. .. ..$ num.bin            : num 20\n##   .. .. .. .. ..$ binning.method     : chr \"equal_width\"\n##   .. .. .. .. ..$ nfeatures          : num 2000\n##   .. .. .. .. ..$ mean.cutoff        : num [1:2] 0.1 8\n##   .. .. .. .. ..$ dispersion.cutoff  : num [1:2] 1 Inf\n##   .. .. .. .. ..$ verbose            : logi TRUE\n##   .. ..$ ScaleData.RNA           :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"ScaleData.RNA\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:49:47\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"ScaleData(pbmc, vars.to.regress = \\\"percent.mt\\\")\"\n##   .. .. .. ..@ params     :List of 11\n##   .. .. .. .. ..$ features          : chr [1:2000] \"PPBP\" \"LYZ\" \"S100A9\" \"IGLL5\" ...\n##   .. .. .. .. ..$ assay             : chr \"RNA\"\n##   .. .. .. .. ..$ vars.to.regress   : chr \"percent.mt\"\n##   .. .. .. .. ..$ model.use         : chr \"linear\"\n##   .. .. .. .. ..$ use.umi           : logi FALSE\n##   .. .. .. .. ..$ do.scale          : logi TRUE\n##   .. .. .. .. ..$ do.center         : logi TRUE\n##   .. .. .. .. ..$ scale.max         : num 10\n##   .. .. .. .. ..$ block.size        : num 1000\n##   .. .. .. .. ..$ min.cells.to.block: num 2638\n##   .. .. .. .. ..$ verbose           : logi TRUE\n##   .. ..$ RunPCA.RNA              :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"RunPCA.RNA\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:49:54\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"RunPCA(pbmc, features = VariableFeatures(object = pbmc))\"\n##   .. .. .. ..@ params     :List of 11\n##   .. .. .. .. ..$ assay          : chr \"RNA\"\n##   .. .. .. .. ..$ features       : chr [1:2000] \"PPBP\" \"LYZ\" \"S100A9\" \"IGLL5\" ...\n##   .. .. .. .. ..$ npcs           : num 50\n##   .. .. .. .. ..$ rev.pca        : logi FALSE\n##   .. .. .. .. ..$ weight.by.var  : logi TRUE\n##   .. .. .. .. ..$ verbose        : logi TRUE\n##   .. .. .. .. ..$ ndims.print    : int [1:5] 1 2 3 4 5\n##   .. .. .. .. ..$ nfeatures.print: num 30\n##   .. .. .. .. ..$ reduction.name : chr \"pca\"\n##   .. .. .. .. ..$ reduction.key  : chr \"PC_\"\n##   .. .. .. .. ..$ seed.use       : num 42\n##   .. ..$ JackStraw.RNA.pca       :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"JackStraw.RNA.pca\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:54:13\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"JackStraw(pbmc, num.replicate = 100)\"\n##   .. .. .. ..@ params     :List of 7\n##   .. .. .. .. ..$ reduction    : chr \"pca\"\n##   .. .. .. .. ..$ assay        : chr \"RNA\"\n##   .. .. .. .. ..$ dims         : num 20\n##   .. .. .. .. ..$ num.replicate: num 100\n##   .. .. .. .. ..$ prop.freq    : num 0.01\n##   .. .. .. .. ..$ verbose      : logi TRUE\n##   .. .. .. .. ..$ maxit        : num 1000\n##   .. ..$ ScoreJackStraw          :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"ScoreJackStraw\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:54:13\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"ScoreJackStraw(pbmc, dims = 1:20)\"\n##   .. .. .. ..@ params     :List of 4\n##   .. .. .. .. ..$ reduction   : chr \"pca\"\n##   .. .. .. .. ..$ dims        : int [1:20] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. .. .. .. ..$ score.thresh: num 1e-05\n##   .. .. .. .. ..$ do.plot     : logi FALSE\n##   .. ..$ FindNeighbors.RNA.pca   :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"FindNeighbors.RNA.pca\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:54:15\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"FindNeighbors(pbmc, dims = 1:10)\"\n##   .. .. .. ..@ params     :List of 17\n##   .. .. .. .. ..$ reduction      : chr \"pca\"\n##   .. .. .. .. ..$ dims           : int [1:10] 1 2 3 4 5 6 7 8 9 10\n##   .. .. .. .. ..$ assay          : chr \"RNA\"\n##   .. .. .. .. ..$ k.param        : num 20\n##   .. .. .. .. ..$ return.neighbor: logi FALSE\n##   .. .. .. .. ..$ compute.SNN    : logi TRUE\n##   .. .. .. .. ..$ prune.SNN      : num 0.0667\n##   .. .. .. .. ..$ nn.method      : chr \"annoy\"\n##   .. .. .. .. ..$ n.trees        : num 50\n##   .. .. .. .. ..$ annoy.metric   : chr \"euclidean\"\n##   .. .. .. .. ..$ nn.eps         : num 0\n##   .. .. .. .. ..$ verbose        : logi TRUE\n##   .. .. .. .. ..$ force.recalc   : logi FALSE\n##   .. .. .. .. ..$ do.plot        : logi FALSE\n##   .. .. .. .. ..$ graph.name     : chr [1:2] \"RNA_nn\" \"RNA_snn\"\n##   .. .. .. .. ..$ l2.norm        : logi FALSE\n##   .. .. .. .. ..$ cache.index    : logi FALSE\n##   .. ..$ FindClusters            :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"FindClusters\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:54:15\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"FindClusters(pbmc, resolution = 0.5)\"\n##   .. .. .. ..@ params     :List of 10\n##   .. .. .. .. ..$ graph.name      : chr \"RNA_snn\"\n##   .. .. .. .. ..$ modularity.fxn  : num 1\n##   .. .. .. .. ..$ resolution      : num 0.5\n##   .. .. .. .. ..$ method          : chr \"matrix\"\n##   .. .. .. .. ..$ algorithm       : num 1\n##   .. .. .. .. ..$ n.start         : num 10\n##   .. .. .. .. ..$ n.iter          : num 10\n##   .. .. .. .. ..$ random.seed     : num 0\n##   .. .. .. .. ..$ group.singletons: logi TRUE\n##   .. .. .. .. ..$ verbose         : logi TRUE\n##   .. ..$ RunUMAP.RNA.pca         :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"RunUMAP.RNA.pca\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:54:28\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"RunUMAP(pbmc, dims = 1:10)\"\n##   .. .. .. ..@ params     :List of 22\n##   .. .. .. .. ..$ dims                : int [1:10] 1 2 3 4 5 6 7 8 9 10\n##   .. .. .. .. ..$ reduction           : chr \"pca\"\n##   .. .. .. .. ..$ assay               : chr \"RNA\"\n##   .. .. .. .. ..$ slot                : chr \"data\"\n##   .. .. .. .. ..$ umap.method         : chr \"uwot\"\n##   .. .. .. .. ..$ return.model        : logi FALSE\n##   .. .. .. .. ..$ n.neighbors         : int 30\n##   .. .. .. .. ..$ n.components        : int 2\n##   .. .. .. .. ..$ metric              : chr \"cosine\"\n##   .. .. .. .. ..$ learning.rate       : num 1\n##   .. .. .. .. ..$ min.dist            : num 0.3\n##   .. .. .. .. ..$ spread              : num 1\n##   .. .. .. .. ..$ set.op.mix.ratio    : num 1\n##   .. .. .. .. ..$ local.connectivity  : int 1\n##   .. .. .. .. ..$ repulsion.strength  : num 1\n##   .. .. .. .. ..$ negative.sample.rate: int 5\n##   .. .. .. .. ..$ uwot.sgd            : logi FALSE\n##   .. .. .. .. ..$ seed.use            : int 42\n##   .. .. .. .. ..$ angular.rp.forest   : logi FALSE\n##   .. .. .. .. ..$ verbose             : logi TRUE\n##   .. .. .. .. ..$ reduction.name      : chr \"umap\"\n##   .. .. .. .. ..$ reduction.key       : chr \"UMAP_\"\n##   .. ..$ RunTSNE                 :Formal class 'SeuratCommand' [package \"SeuratObject\"] with 5 slots\n##   .. .. .. ..@ name       : chr \"RunTSNE\"\n##   .. .. .. ..@ time.stamp : POSIXct[1:1], format: \"2021-07-08 11:54:36\"\n##   .. .. .. ..@ assay.used : chr \"RNA\"\n##   .. .. .. ..@ call.string: chr \"RunTSNE(pbmc, dims = 1:10)\"\n##   .. .. .. ..@ params     :List of 8\n##   .. .. .. .. ..$ reduction     : chr \"pca\"\n##   .. .. .. .. ..$ cells         : chr [1:2638] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\" ...\n##   .. .. .. .. ..$ dims          : int [1:10] 1 2 3 4 5 6 7 8 9 10\n##   .. .. .. .. ..$ seed.use      : num 1\n##   .. .. .. .. ..$ tsne.method   : chr \"Rtsne\"\n##   .. .. .. .. ..$ dim.embed     : num 2\n##   .. .. .. .. ..$ reduction.name: chr \"tsne\"\n##   .. .. .. .. ..$ reduction.key : chr \"tSNE_\"\n##   ..@ tools       :List of 2\n##   .. ..$ BuildClusterTree           :List of 4\n##   .. .. ..$ edge       : int [1:16, 1:2] 10 10 11 12 12 11 13 14 14 16 ...\n##   .. .. ..$ edge.length: num [1:16] 463 158 174 131 131 ...\n##   .. .. ..$ tip.label  : chr [1:9] \"0\" \"1\" \"2\" \"3\" ...\n##   .. .. ..$ Nnode      : int 8\n##   .. .. ..- attr(*, \"class\")= chr \"phylo\"\n##   .. .. ..- attr(*, \"order\")= chr \"cladewise\"\n##   .. ..$ CalculateBarcodeInflections:List of 4\n##   .. .. ..$ barcode_distribution:'data.frame':\t2638 obs. of  4 variables:\n##   .. .. .. ..$ orig.ident: Factor w/ 1 level \"pbmc3k\": 1 1 1 1 1 1 1 1 1 1 ...\n##   .. .. .. ..$ nCount_RNA: num [1:2638] 8875 8415 8011 7928 7167 ...\n##   .. .. .. ..$ rank      : num [1:2638] 1 2 3 4 5 6 7 8 9 10 ...\n##   .. .. .. ..$ rawdiff   : num [1:2638] 0 -0.02311 -0.02136 -0.00452 -0.04382 ...\n##   .. .. ..$ inflection_points   :'data.frame':\t1 obs. of  3 variables:\n##   .. .. .. ..$ orig.ident: Factor w/ 1 level \"pbmc3k\": 1\n##   .. .. .. ..$ nCount_RNA: num 7167\n##   .. .. .. ..$ rank      : num 5\n##   .. .. ..$ threshold_values    :'data.frame':\t2 obs. of  2 variables:\n##   .. .. .. ..$ threshold: chr [1:2] \"threshold.low\" \"threshold.high\"\n##   .. .. .. ..$ rank     : num [1:2] 1 2638\n##   .. .. ..$ cells_pass          : chr [1:2635] \"GGGCCAACCTTGGA-1\" \"CAGGTTGAGGATCT-1\" \"ACGAGGGACAGGAG-1\" \"AAGCCATGAACTGC-1\" ...\n# Retrieve UMAP data\n# Retrieve the coordinates of each cell, and cluster, celltype information\numap <- pbmc@reductions$umap@cell.embeddings |> \n  as.data.frame() |> \n  cbind(cell_type = pbmc@meta.data$labels)\n\nhead(umap)\n##                     UMAP_1     UMAP_2 cell_type\n## AAACATACAACCAC-1 -4.577857   1.650203   T_cells\n## AAACATTGAGCTAC-1 -2.813911 -11.897462    B_cell\n## AAACATTGATCAGC-1 -1.684490   3.302480   T_cells\n## AAACCGTGCTTCCG-1 12.694498   2.098798  Monocyte\n## AAACCGTGTATGCG-1 -9.829201   3.982013   NK_cell\n## AAACGCACTGGTAC-1 -2.908319   1.249230   T_cells\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define the colors\nallcolour <- c(\n    \"#DC143C\",\"#0000FF\",\"#20B2AA\",\"#FFA500\",\"#9370DB\",\"#98FB98\",\"#F08080\",\n    \"#1E90FF\",\"#7CFC00\",\"#FFFF00\", \"#808000\",\"#FF00FF\",\"#FA8072\",\"#7B68EE\",\n    \"#9400D3\",\"#800080\",\"#A0522D\",\"#D2B48C\",\"#D2691E\",\"#87CEEB\",\"#40E0D0\",\n    \"#5F9EA0\",\"#FF1493\",\"#0000CD\",\"#008B8B\",\"#FFE4B5\",\"#8A2BE2\",\"#228B22\",\n    \"#E9967A\",\"#4682B4\",\"#32CD32\",\"#F0E68C\",\"#FFFFE0\",\"#EE82EE\",\"#FF6347\",\n    \"#6A5ACD\",\"#9932CC\",\"#8B008B\",\"#8B4513\",\"#DEB887\"\n)\n# ggplot2\np <- ggplot(umap, aes(x = UMAP_1, y = UMAP_2, color = cell_type)) +\n    geom_point(size = 1, alpha = 1) +\n    ### MAP cluster with color\n    scale_color_manual(values = allcolour) +\n    ### Axis annotation\n    geom_segment(\n        aes(\n            x = min(umap$UMAP_1) , y = min(umap$UMAP_2) ,\n            xend = min(umap$UMAP_1) +3, yend = min(umap$UMAP_2)\n        ), colour = \"black\", linewidth = 1,arrow = arrow(length = unit(0.3,\"cm\"))\n    ) + \n    geom_segment(\n        aes(\n            x = min(umap$UMAP_1)  , y = min(umap$UMAP_2)  ,\n            xend = min(umap$UMAP_1) , yend = min(umap$UMAP_2) + 3),\n            colour = \"black\", linewidth = 1,arrow = arrow(length = unit(0.3,\"cm\"))\n    ) +\n    annotate(\n        \"text\", x = min(umap$UMAP_1) +1.5, y = min(umap$UMAP_2) -1, \n        label = \"UMAP_1\", color=\"black\",size = 3, fontface=\"bold\"\n    ) + \n    annotate(\n        \"text\", x = min(umap$UMAP_1) -1, y = min(umap$UMAP_2) + 1.5, \n        label = \"UMAP_2\", color=\"black\",size = 3, fontface=\"bold\" ,angle=90\n    ) + \n    theme(\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        panel.background = element_rect(fill = \"white\"),\n        plot.background = element_rect(fill = \"white\"),\n        legend.title = element_blank(), \n        legend.key=element_rect(fill= \"white\"),\n        legend.text = element_text(size = 20),\n        legend.key.size=unit(1, \"cm\")\n    ) +\n    ### legend label size\n    guides(color = guide_legend(override.aes = list(size=5)))\n### View it\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### Annotate cell type on UMAP\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Calcualte the median coordinates of each cluster\ncell_type_med <- umap |>\n  group_by(cell_type) |>\n  summarise(UMAP_1 = median(UMAP_1),\n    UMAP_2 = median(UMAP_2)\n  )\n# Annotation\np + geom_label_repel(\n    aes(label = cell_type, size = 20), fontface = \"bold\", data = cell_type_med,\n    point.padding = unit(0.5, \"lines\")\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n## FeaturePlot\n\n### Default Seurat FeaturePlot\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nDimPlot(pbmc, label = TRUE)|FeaturePlot(pbmc, features = \"CD79A\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nFeaturePlot(pbmc, features = c(\"CD79A\", \"CD8A\"), blend=TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nFeaturePlot(pbmc, features = c(\"CD79A\",\"CD79B\"), blend=TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-3.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\nFeaturePlot(pbmc, features = c(\"CD79A\",\"CD79B\", \"CD68\", \"CD163\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-4.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### Feature with ggplot2\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmydata  <- FetchData(\n    pbmc,\n    vars = c(\"rna_CD79A\", \"rna_CD8A\", \"rna_CCR7\", \"UMAP_1\", \"UMAP_2\")\n)\nhead(mydata)\n##                  rna_CD79A rna_CD8A rna_CCR7    UMAP_1     UMAP_2\n## AAACATACAACCAC-1  0.000000 1.635873 1.635873 -4.577857   1.650203\n## AAACATTGAGCTAC-1  1.962726 0.000000 0.000000 -2.813911 -11.897462\n## AAACATTGATCAGC-1  0.000000 0.000000 0.000000 -1.684490   3.302480\n## AAACCGTGCTTCCG-1  0.000000 0.000000 0.000000 12.694498   2.098798\n## AAACCGTGTATGCG-1  0.000000 0.000000 0.000000 -9.829201   3.982013\n## AAACGCACTGGTAC-1  0.000000 0.000000 0.000000 -2.908319   1.249230\n\n### Single gene\nmydata |>\n    ggplot(aes(x = UMAP_1, y = UMAP_2)) +\n    geom_point(\n        data = mydata, aes(x = UMAP_1, y = UMAP_2,\n        color = rna_CD79A), size = 1\n    ) +\n    ### Increase the transprancy of gray dots\n    scale_color_gradient(\n        \"rna_CD79A\", low = alpha(\"grey\", 0.1), \n        high = alpha(\"red\", 1)\n    ) +\n    ### Density\n    stat_density2d(aes(colour=rna_CD79A))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### Multiple genes in feature plot\nggplot(mydata, aes(x = UMAP_1, y = UMAP_2)) +\n    geom_point(\n        data = mydata, aes(x = UMAP_1, y = UMAP_2, color = rna_CD79A), \n        size = 1\n    ) +\n    scale_color_gradient(\n        \"CD79A\", low = alpha(\"grey\", 0.1), high = alpha(\"purple\", 1)\n    ) +\n    new_scale(\"color\") +\n    geom_point(\n        data = mydata, aes(x = UMAP_1, y = UMAP_2, color = rna_CD8A), \n        size = 1\n    ) +\n    scale_color_gradient(\n        \"CD8A\", low = alpha(\"grey\", 0.1), high = alpha(\"red\", 1)\n    ) +\n    new_scale(\"color\") +\n    geom_point(\n        data = mydata, aes(x = UMAP_1, y = UMAP_2,color = rna_CCR7), \n        size = 1\n    ) +\n    scale_color_gradient(\n        \"CCR7\", low = alpha(\"grey\", 0.1), high = alpha(\"green\", 1)\n    ) +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Dotplot\n\n\n### Deafult Dotplot within Seurat\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Find marker genes\n# all_markers <- FindAllMarkers(object = sce2)\n# save(all_markers,file = here(\"learn\", \"2023_scRNA\", \"all_markers.RData\"))\n\nDotPlot(sce2,features = unique(top5$gene) ,assay='RNA')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Optimize colors, size, and direction\np1 <- DotPlot(sce2, features = unique(top5$gene), assay = \"RNA\") + \n  coord_flip() + \n  labs(x = NULL,y = NULL) + \n  guides(size = guide_legend(\"Percent Expression\"))+\n  scale_color_gradientn(colours = c(\"#330066\", \"#336699\", \"#66CC66\", \"#FFCC33\")) +\n  theme(\n    panel.grid = element_blank(), \n    axis.text.x = element_text(angle = 45, hjust = 0.5,vjust = 0.5)\n  )\n## Scale for colour is already present.\n## Adding another scale for colour, which will replace the existing scale.\np1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n### Dotplot with Complexheatmap\n\nWe can refer to details from [here](https://divingintogeneticsandgenomics.com/post/clustered-dotplot-for-single-cell-rnaseq/) for detailed parameters customization.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Retrieve data\ndf <- p1$data\nhead(df)\n##               avg.exp   pct.exp features.plot id avg.exp.scaled\n## REG4       7.70481043 17.174382          REG4  0       2.500000\n## BPIFB1     0.30669602  6.860158        BPIFB1  0       2.500000\n## FABP1      0.29179596  3.118254         FABP1  0       2.500000\n## SLC9A4     0.01901309  1.751019        SLC9A4  0       2.500000\n## AC073218.2 0.03103152  1.655073    AC073218.2  0       1.137072\n## SPRR1A     0.07460096  3.837851        SPRR1A  0       0.208155\n\n# The matrix for the scaled expression \nexp_mat <-df |> \n  select(-pct.exp, -avg.exp) |>  \n  pivot_wider(names_from = id, values_from = avg.exp.scaled) |> \n  as.data.frame()\nrow.names(exp_mat) <- exp_mat$features.plot\nexp_mat <- exp_mat[, -1] |> as.matrix()\nhead(exp_mat, 2)\n##          0          1          2          3          4        5          6\n## REG4   2.5  1.0681259 -0.6492553 -0.6766277  0.4956595 1.826576 -0.4005466\n## BPIFB1 2.5 -0.1015123 -0.4099583 -0.5370206 -0.3309614 1.039651 -0.6032213\n##                 7          8          9         10        11         12\n## REG4   -0.3648312 -0.6411552  0.3682808 -0.4876358 0.3408992 -0.6358072\n## BPIFB1  0.4017002 -0.5414065 -0.2597756 -0.5685453 1.6007798 -0.6318396\n##                13         14        15         16         17         18\n## REG4   -0.7044399 -0.7832735 0.5617191 -0.7888883 -0.5395693 -0.7888883\n## BPIFB1 -0.6318396 -0.6318396 1.1110916 -0.6318396 -0.6318396 -0.6318396\n\n## The matrix for the percentage of cells express a gene\npercent_mat <- df |> \n  select(-avg.exp, -avg.exp.scaled) |>  \n  pivot_wider(names_from = id, values_from = pct.exp) |> \n  as.data.frame()\n \nrow.names(percent_mat) <- percent_mat$features.plot  \npercent_mat <- percent_mat[, -1] |> as.matrix()\nhead(percent_mat, 2)\n##                0         1        2         3        4         5         6\n## REG4   17.174382 11.642157 5.015480 3.2281731 7.209302 16.111851 7.9301075\n## BPIFB1  6.860158  2.389706 1.114551 0.7336757 2.015504  3.062583 0.2688172\n##                7         8         9        10        11       12       13 14\n## REG4   11.367673 2.5782689 12.406948 7.1090047 12.244898 5.797101 2.380952  1\n## BPIFB1  6.571936 0.3683241  1.736973 0.4739336  8.843537 0.000000 0.000000  0\n##              15 16       17 18\n## REG4   9.278351  0 8.571429  0\n## BPIFB1 7.216495  0 0.000000  0\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Complexheatmap\n## any value that is greater than 2 will be mapped to yellow\ncol_fun <-  circlize::colorRamp2(c(-1, 0, 2), viridis(20)[c(1,10, 20)])\ncell_fun <- function(j, i, x, y, w, h, fill) {\n    grid.rect(x = x, y = y, width = w, height = h,\n        gp = gpar(col = NA, fill = NA))\n    grid.circle(x = x, y = y, r = percent_mat[i, j] / 100 * min(unit.c(w, h)),\n        gp = gpar(fill = col_fun(exp_mat[i, j]), col = NA))\n}\n\n# also do a kmeans clustering for the genes with k = 4\nHeatmap(\n    exp_mat,\n    heatmap_legend_param = list(title = \"Average Expression\"),\n    column_title = \"clustered dotplot\",\n    col = col_fun,\n    rect_gp = gpar(type = \"none\"),\n    cell_fun = cell_fun,\n    row_names_gp = gpar(fontsize = 3),\n    # row_km = 4,\n    border = \"black\"\n)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Annotate celltype\ncolnames(exp_mat)\ncluster_anno <- c(\"Epi\", \"Myeloid\", \"Fibroblast\", \"T\", \"Endo\", \"un\")\n\ncolumn_ha <- HeatmapAnnotation(\n    cluster_anno = cluster_anno,\n    col = list(cluster_anno = setNames(brewer.pal(6, \"Paired\"), unique(cluster_anno))\n    ),\n    na_col = \"grey\"\n)\n\nHeatmap(\n    exp_mat,\n    heatmap_legend_param = list(title = \"Average Expression\"),\n    column_title = \"clustered dotplot\",\n    col = col_fun,\n    rect_gp = gpar(type = \"none\"),\n    cell_fun = cell_fun,\n    row_names_gp = gpar(fontsize = 5),\n    # row_km = 4,\n    border = \"black\",\n    top_annotation = column_ha\n)\n\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Add legend\nlayer_fun <- function(j, i, x, y, w, h, fill) {\n    grid.rect(\n        x = x, y = y, width = w, height = h, gp = gpar(col = NA, fill = NA)\n    )\n    grid.circle(\n        x = x, y = y, r = pindex(percent_mat, i, j) / 100 * unit(2, \"mm\"),\n        gp = gpar(fill = col_fun(pindex(exp_mat, i, j)), col = NA)\n    )\n}\n\nlgd_list = list(\n    Legend(\n        labels = c(0, 0.25, 0.5, 0.75, 1), title = \"Percent Expressed\",\n        graphics = list(\n            function(x, y, w, h) grid.circle(x = x, y = y, r = 0 * unit(2, \"mm\"),\n                gp = gpar(fill = \"black\")),\n            function(x, y, w, h) grid.circle(x = x, y = y, r = 0.25 * unit(2, \"mm\"),\n                gp = gpar(fill = \"black\")),\n            function(x, y, w, h) grid.circle(x = x, y = y, r = 0.5 * unit(2, \"mm\"),\n                gp = gpar(fill = \"black\")),\n            function(x, y, w, h) grid.circle(x = x, y = y, r = 0.75 * unit(2, \"mm\"),\n                gp = gpar(fill = \"black\")),\n            function(x, y, w, h) grid.circle(x = x, y = y, r = 1 * unit(2, \"mm\"),\n                gp = gpar(fill = \"black\"))\n        )\n    )\n)\n\nhp <- Heatmap(\n    exp_mat,\n    heatmap_legend_param = list(title = \"expression\"),\n    column_title = \"clustered dotplot\",\n    col = col_fun,\n    rect_gp = gpar(type = \"none\"),\n    layer_fun = layer_fun,\n    row_names_gp = gpar(fontsize = 5),\n    # row_km = 4,\n    border = \"black\",\n    top_annotation = column_ha\n)\n\ndraw(hp, annotation_legend_list = lgd_list)\n```\n:::\n\n\n### Dotplot with scCustomize\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nClustered_DotPlot(seurat_object = sce2, features = unique(top5$gene))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=100%}\n:::\n\n```\n## [[1]]\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-2.png){fig-align='center' width=100%}\n:::\n\n```\n## \n## [[2]]\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-3.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n\nmy36colors <- c(\n    '#E5D2DD', '#53A85F', '#F1BB72', '#F3B1A0', '#D6E7A3', '#57C3F3', '#476D87',\n    '#E95C59', '#E59CC4', '#AB3282', '#23452F', '#BD956A', '#8C549C', '#585658',\n    '#9FA3A8', '#E0D4CA', '#5F3D69', '#C5DEBA', '#58A4C3', '#E4C755', '#F7F398',\n    '#AA9A59', '#E63863', '#E39A35', '#C1E6F3', '#6778AE', '#91D0BE', '#B53E2B',\n    '#712820', '#DCC1DD', '#CCE0F5', '#CCC9E6', '#625D9E', '#68A180', '#3A6963',\n    '#968175'\n)\n\nClustered_DotPlot(\n    seurat_object = sce2,\n    colors_use_exp = c('#330066', '#336699', '#66CC66', '#FFCC33'),\n    colors_use_idents = my36colors,\n    features = unique(top5$gene)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-4.png){fig-align='center' width=100%}\n:::\n\n```\n## [[1]]\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-5.png){fig-align='center' width=100%}\n:::\n\n```\n## \n## [[2]]\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-6.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## DoHeatmap\n\n### Deafult DoHeatmap with Seurat \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nDoHeatmap(sce2, top5$gene)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Customize label and color\nDoHeatmap(\n    sce2,\n    label = F, # remove label\n    features = as.character(unique(top5$gene)),\n    group.by = \"celltype\",\n    assay = \"RNA\",\n    group.colors = c(\n        \"#C77CFF\", \"#7CAE00\", \"#00BFC4\", \"#F8766D\", \"#AB82FF\", \"#90EE90\",\n        \"#00CD00\", \"#008B8B\", \"#FFA500\"\n    ) # Group color\n) +\n    scale_fill_gradientn(\n        colors = c(\"navy\", \"white\", \"firebrick3\")\n    ) # heatmap color\n\n```\n:::\n\n\n### Complexheatmap or pheatmap\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Retrieve matix\n# mat <- GetAssayData(pbmc,slot = \"scale.data\")\n```\n:::\n\n\n### dittoSeq\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# BiocManager::install(\"dittoSeq\")\n\ndittoHeatmap(sce2, top5$gene,\n             annot.by = c(\"celltype\", \"sample\",\"AUCell\"))\n```\n:::\n\n### scillus\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# devtools::install_github(\"xmc811/Scillus\", ref = \"development\")\n# Use same colors of umap  \nmy36colors <-c(\n  '#E5D2DD', '#53A85F', '#F1BB72', '#F3B1A0', '#D6E7A3', '#57C3F3', '#476D87',\n  '#E95C59', '#E59CC4', '#AB3282', '#23452F', '#BD956A', '#8C549C', '#585658',\n  '#9FA3A8', '#E0D4CA', '#5F3D69', '#C5DEBA', '#58A4C3', '#E4C755', '#F7F398',\n  '#AA9A59', '#E63863', '#E39A35', '#C1E6F3', '#6778AE', '#91D0BE', '#B53E2B',\n  '#712820', '#DCC1DD', '#CCE0F5',  '#CCC9E6', '#625D9E', '#68A180', '#3A6963',\n  '#968175'\n)\n\nplot_heatmap(dataset = sce2, \n             markers = top5$gene,\n             sort_var = c(\"celltype\",\"sample\"),\n             anno_var = c(\"celltype\",\"sample\",\"percent.mt\",\"AUCell\"),\n             anno_colors = list(\n                \"Set2\",  # RColorBrewer palette\n                my36colors,  # color vecto\n                \"Reds\",\n                \"Greens\")\n)\n```\n:::\n\n\n## VlnPlot\n\n### Default Seurat VlnPlot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Few marker\nVlnPlot(sce2, features = c(\"CD3D\",\"SPP1\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n\n# All marker genes\n# VlnPlot(sce2, features = top5$gene)\n```\n:::\n\n\n### Stacked Vlnplot\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\na <- VlnPlot(sce2, features = top5$gene, stack = TRUE, sort = TRUE) +\n  theme(legend.position = \"none\") + ggtitle(\"Identity on y-axis\")\n\n# Flip\nb <- VlnPlot(sce2, features = top5$gene, stack = TRUE, sort = TRUE, flip = TRUE) +\n  theme(legend.position = \"none\") + ggtitle(\"Identity on x-axis\")\n\na + b\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Optimize colors, size and direction\nmy36colors <- c(\n    '#E5D2DD', '#53A85F', '#F1BB72', '#F3B1A0', '#D6E7A3', '#57C3F3', '#476D87',\n    '#E95C59', '#E59CC4', '#AB3282', '#23452F', '#BD956A', '#8C549C', '#585658',\n    '#9FA3A8', '#E0D4CA', '#5F3D69', '#C5DEBA', '#58A4C3', '#E4C755', '#F7F398',\n    '#AA9A59', '#E63863', '#E39A35', '#C1E6F3', '#6778AE', '#91D0BE', '#B53E2B',\n    '#712820', '#DCC1DD', '#CCE0F5', '#CCC9E6', '#625D9E', '#68A180', '#3A6963',\n    '#968175'\n)\n\nVlnPlot(\n    sce2, \n    features = top_marker$gene,\n    stack = TRUE,\n    sort = TRUE,\n    cols = my36colors,\n    split.by = \"celltype\", # color for each cluster\n    flip = TRUE\n  ) +\n    theme(legend.position = \"none\") +\n    ggtitle(\"Identity on x-axis\")\n```\n:::\n\n\n### VlnPlot with ggplot2\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvln.dat  <- FetchData(sce2, c(top_marker$gene,\"celltype\",\"seurat_clusters\"))\n\nvln.dat$Cell <- rownames(vln.dat)\nvln.dat.melt <- reshape2::melt(vln.dat, id.vars = c(\"Cell\",\"seurat_clusters\"), \n                               measure.vars = top_marker$gene,\n                               variable.name = \"gene\", \n                               value.name = \"Expr\") |>\n  group_by(seurat_clusters,gene) |> \n  mutate(fillcolor=mean(Expr))\n\n# Plot \nggplot(vln.dat.melt, aes(factor(seurat_clusters), Expr, fill = gene)) +\n  geom_violin(scale = \"width\", adjust = 1, trim = TRUE) +\n  facet_grid(rows = vars(gene), scales = \"free\", switch = \"y\") \n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Customize\np1 <- ggplot(vln.dat.melt, aes(gene, Expr, fill = gene)) +\n  geom_violin(scale = \"width\", adjust = 1, trim = TRUE) +\n  scale_y_continuous(expand = c(0, 0), position=\"right\", labels = function(x)\n    c(rep(x = \"\", times = length(x)-2), x[length(x) - 1], \"\")) +\n  facet_grid(rows = vars(seurat_clusters), scales = \"free\", switch = \"y\") +\n  scale_fill_manual(values = my36colors) + \n  theme_cowplot(font_size = 12) +\n  theme(legend.position = \"none\", panel.spacing = unit(0, \"lines\"),\n        plot.title = element_text(hjust = 0.5),\n        panel.background = element_rect(fill = NA, color = \"black\"),\n        plot.margin = margin(7, 7, 0, 7, \"pt\"),\n        strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\"),\n        strip.text.y.left = element_text(angle = 0),\n        axis.title.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, color = \"black\")\n        ) +\n  ggtitle(\"Feature on x-axis with annotation\") + ylab(\"Expression Level\")\np1\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np2 <- ggplot(vln.dat.melt, aes(gene, Expr, fill = gene)) +\n  geom_violin(scale = \"width\", adjust = 1, trim = TRUE) +\n  scale_y_continuous(expand = c(0, 0), position=\"right\", labels = function(x)\n    c(rep(x = \"\", times = length(x)-2), x[length(x) - 1], \"\")) +\n  facet_grid(rows = vars(seurat_clusters), scales = \"free\", switch = \"y\") +\n  scale_fill_manual(values = my36colors) + \n  theme_cowplot(font_size = 12) +\n  theme(legend.position = \"none\", panel.spacing = unit(0, \"lines\"),\n        plot.title = element_text(hjust = 0.5),\n        panel.background = element_rect(fill = NA, color = \"black\"),\n        plot.margin = margin(7, 7, 0, 7, \"pt\"),\n        strip.background = element_blank(),\n        strip.text = element_text(face = \"bold\"),\n        strip.text.y.left = element_text(angle = 0),\n        axis.title.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.text.x = element_blank()\n  ) +\n  ggtitle(\"Feature on x-axis with annotation\") + ylab(\"Expression Level\")\np2\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Create grouping info\ndf <- data.frame(x = levels(vln.dat.melt$gene), \n                 group = c(\"A\",\"A\",\"B\",\"B\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\n                           \"D\",\"D\",\"D\",\"D\",\"D\"), \n                 stringsAsFactors = FALSE)\ndf$x <- factor(df$x, levels = levels(vln.dat.melt$gene))\ndf$group <- factor(df$group)\n\nlevels(df$group) = c(\"ECM-receptor interaction\", \"PI3K-Akt signaling pathway\", \n                     \"MAPK signaling pathway\", \"Cell adhesion molecules\")\n\ncolor <- c(\"cyan\", \"pink\", \"green\", \"darkorange\")\n\np3 <- ggplot(df, aes(x = x, y = 1, fill = group)) + geom_tile() + theme_bw(base_size = 12) +\n  scale_fill_manual(values = my36colors) + scale_y_continuous(expand = c(0, 0)) +\n  guides(fill = guide_legend(direction = \"vertical\", label.position = \"right\",\n                             title.theme = element_blank(), keyheight = 0.5, nrow = 2)) +\n  theme(legend.position = \"bottom\",\n        legend.justification = \"left\",\n        legend.margin = margin(0,0,0,0),\n        legend.box.margin = margin(-10,5,0,0),\n        panel.spacing = unit(0, \"lines\"),\n        panel.background = element_blank(),\n        panel.border = element_blank(),\n        plot.background = element_blank(),\n        plot.margin = margin(0, 7, 7, 7, \"pt\"),\n        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, color = \"black\"),\n        axis.title.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.y = element_blank()) + xlab(\"Feature\")\np3\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Use plot_grid to join plots\nplot_grid(p2, p3, ncol = 1, rel_heights = c(0.78, 0.22), align = \"v\", axis = \"lr\")\n```\n:::\n\n\n## Reference\n\n1. <https://github.com/ycl6/StackedVlnPlot>\n2. <https://scillus.netlify.app/vignettes/plotting.html>\n3. <https://bioconductor.org/packages/devel/bioc/vignettes/dittoSeq/inst/doc/dittoSeq.html>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}