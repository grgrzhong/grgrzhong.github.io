{
  "hash": "04a3f91563aa821e6c05920455334fa6",
  "result": {
    "markdown": "---\ntitle: \"Analyze Omics data using [structToolbox]\"\ndate: 2023-07-04\n# date-modified: 2023-04-05\ncategories:\n  - r\nimage: pca.png\n---\n\n\n\n\n## Packages\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npacman::p_load(\n    ### BiocManager packages\n    structToolbox,\n    pmp,\n    ropls,\n    BiocFileCache,\n    ### CRAN packages\n    cowplot,\n    openxlsx,\n    ggplot2, \n    gridExtra\n)\n\n### use the BiocFileCache\n# bfc <- BiocFileCache(ask = FALSE)\n```\n:::\n\n## Dataset\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### iris dataset\nD <- iris_DatasetExperiment()\nD$sample_meta$class <- D$sample_meta$Species\nD\n## A \"DatasetExperiment\" object\n## ----------------------------\n## name:          Fisher's Iris dataset\n## description:   This famous (Fisher's or Anderson's) iris data set gives the measurements in centimeters of\n##                  the variables sepal length and width and petal length and width,\n##                  respectively, for 50 flowers from each of 3 species of iris. The species are\n##                  Iris setosa, versicolor, and virginica.\n## data:          150 rows x 4 columns\n## sample_meta:   150 rows x 2 columns\n## variable_meta: 4 rows x 1 columns\nhead(D$data[, 1:4])\n##   Sepal.Length Sepal.Width Petal.Length Petal.Width\n## 1          5.1         3.5          1.4         0.2\n## 2          4.9         3.0          1.4         0.2\n## 3          4.7         3.2          1.3         0.2\n## 4          4.6         3.1          1.5         0.2\n## 5          5.0         3.6          1.4         0.2\n## 6          5.4         3.9          1.7         0.4\n```\n:::\n\n\n## Using {struct} model objects\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### Statistical models\nP = PCA(number_components=15)\nP$number_components  <-  5\nP$number_components\n## [1] 5\n### the input for a model can be listed using:\nparam_ids(P)\n## [1] \"number_components\"\nP\n## A \"PCA\" object\n## --------------\n## name:          Principal Component Analysis (PCA)\n## description:   PCA is a multivariate data reduction technique. It summarises the data in a smaller number of\n##                  Principal Components that maximise variance.\n## input params:  number_components \n## outputs:       scores, loadings, eigenvalues, ssx, correlation, that \n## predicted:     that\n## seq_in:        data\n### model sequences\nM = mean_centre() + PCA(number_components = 4)\nM[2]$number_components\n## [1] 4\n### training/testing models\nM = model_train(M, D)\nM = model_predict(M,D)\nM = model_apply(M,D)\noutput_ids(M[2])\n## [1] \"scores\"      \"loadings\"    \"eigenvalues\" \"ssx\"         \"correlation\"\n## [6] \"that\"\n\n### model charts\nchart_names(M[2])\n## [1] \"pca_biplot\"           \"pca_correlation_plot\" \"pca_dstat_plot\"      \n## [4] \"pca_loadings_plot\"    \"pca_scores_plot\"      \"pca_scree_plot\"\n### plot PCA scores plot\nC = pca_scores_plot(factor_name='class') # colour by class\nchart_plot(C,M[2])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n\n# add petal width to meta data of pca scores\nM[2]$scores$sample_meta$example=D$data[,1]\n# update plot\nC$factor_name='example'\nchart_plot(C,M[2])\n## Warning: The following aesthetics were dropped during statistical transformation: colour\n## ℹ This can happen when ggplot fails to infer the correct grouping structure in\n##   the data.\n## ℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n##   variable into a factor?\n## The following aesthetics were dropped during statistical transformation: colour\n## ℹ This can happen when ggplot fails to infer the correct grouping structure in\n##   the data.\n## ℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n##   variable into a factor?\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n\n# scores plot\nC1 = pca_scores_plot(factor_name='class') # colour by class\ng1 = chart_plot(C1,M[2])\n\n# scree plot\nC2 = pca_scree_plot()\ng2 = chart_plot(C2,M[2])\n\n# arange in grid\ngrid.arrange(grobs=list(g1,g2),nrow=1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-3.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n## Typical workflow\n\n### Dataset\n\nThe MTBLS79 dataset represents a systematic evaluation of the reproducibility of a multi-batch direct-infusion mass spectrometry (DIMS)-based metabolomics study of cardiac tissue extracts. It comprises twenty biological samples (cow vs. sheep) that were analysed repeatedly, in 8 batches across 7 days, together with a concurrent set of quality control (QC) samples. Data are presented from each step of the data processing workflow and are available through MetaboLights (https://www.ebi.ac.uk/metabolights/MTBLS79).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# the pmp SE object\nSE  <-  MTBLS79\n# convert to DE\nDE  <-  as.DatasetExperiment(SE)\nDE$name  <-  \"MTBLS79\"\nDE$description  <-  \"Converted from SE provided by the pmp package\"\n\n# add a column indicating the order the samples were measured in\nDE$sample_meta$run_order  <-  1:nrow(DE)\n\n# add a column indicating if the sample is biological or a QC\nType <- as.character(DE$sample_meta$Class)\nType[Type != 'QC']  <-  \"Sample\"\nDE$sample_meta$Type  <-  factor(Type)\n\n# convert to factors\nDE$sample_meta$Batch = factor(DE$sample_meta$Batch)\nDE$sample_meta$Class = factor(DE$sample_meta$Class)\n\n# print summary\nDE\n## A \"DatasetExperiment\" object\n## ----------------------------\n## name:          MTBLS79\n## description:   Converted from SE provided by the pmp package\n## data:          172 rows x 2488 columns\n## sample_meta:   172 rows x 6 columns\n## variable_meta: 2488 rows x 0 columns\n```\n:::\n\n### Signal drift and batch correction\n\nA batch correction algorithm is applied to reduce intra- and inter- batch variations in the dataset. Quality Control-Robust Spline Correction (QC-RSC) is provided in the pmp package, and it has been wrapped into a structToolbox object called sb_corr.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n # batch correction\nM <- sb_corr(\n    order_col = \"run_order\",\n    batch_col = \"Batch\",\n    qc_col = \"Type\",\n    qc_label = \"QC\"\n)\n\nM = model_apply(M, DE)\n## The number of NA and <= 0 values in peaksData before QC-RSC: 18222\n\n### plot of a feature vs run order, before and after the correction\nC = feature_profile(\n      run_order='run_order',\n      qc_label='QC',\n      qc_column='Type',\n      colour_by='Batch',\n      feature_to_plot='200.03196'\n  )\n\n# plot and modify using ggplot2 \nchart_plot(C,DE) + ylab('Peak area') + ggtitle('Before')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n\nchart_plot(C,predicted(M))+ylab('Peak area')+ggtitle('After')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n\nM2 = filter_na_count(\n      threshold=3,\n      factor_name='Batch'\n    )\nM2 = model_apply(M2,predicted(M))\n\n# calculate number of features removed\nnc = ncol(DE) - ncol(predicted(M2))\n\ncat(paste0('Number of features removed: ', nc))\n## Number of features removed: 425\n```\n:::\n\n### Feature filtering\n\n\n## Reference\n- [Data analysis of metabolomics and other omics datasets using the structToolbox](https://bioconductor.statistik.tu-dortmund.de/packages/3.11/bioc/vignettes/structToolbox/inst/doc/data_analysis_omics_using_the_structtoolbox.html#1_introduction)\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}