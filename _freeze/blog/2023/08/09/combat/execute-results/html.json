{
  "hash": "117f26f66aee8b6c124097501578a4e8",
  "result": {
    "markdown": "\n## Setting up the data\n\n::: {.cell}\n\n```{.r .cell-code}\n### Install package\npacman::p_load(\n    here, tidyverse, sva, bladderbatch, pamr, limma\n    )\n### Load data\ndata(bladderdata)\n\n### Get the expression data\nedata <- exprs(bladderEset)\nhead(edata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          GSM71019.CEL GSM71020.CEL GSM71021.CEL GSM71022.CEL GSM71023.CEL\n1007_s_at    10.115170     8.628044     8.779235     9.248569    10.256841\n1053_at       5.345168     5.063598     5.113116     5.179410     5.181383\n117_at        6.348024     6.663625     6.465892     6.116422     5.980457\n121_at        8.901739     9.439977     9.540738     9.254368     8.798086\n1255_g_at     3.967672     4.466027     4.144885     4.189338     4.078509\n1294_at       7.775183     7.110154     7.248430     7.017220     7.896419\n          GSM71024.CEL GSM71025.CEL GSM71026.CEL GSM71028.CEL GSM71029.CEL\n1007_s_at    10.023133     9.108034     8.735616     9.803271    10.168602\n1053_at       5.248418     5.252312     5.220931     5.595771     5.025180\n117_at        5.796155     6.414849     6.846798     5.841478     6.352257\n121_at        8.002870     9.093704     9.263386     7.789240     9.834564\n1255_g_at     3.919740     4.402590     4.173666     3.590649     4.338196\n1294_at       7.944676     7.469767     7.281925     7.367814     7.825735\n          GSM71030.CEL GSM71031.CEL GSM71032.CEL GSM71033.CEL GSM71034.CEL\n1007_s_at     8.420904    10.194269    10.184201     9.621902    10.330774\n1053_at       5.909075     5.307699     5.311109     5.542951     5.458996\n117_at        5.967566     6.171909     6.156392     6.120551     5.571636\n121_at        7.844720     7.862812     8.387105     8.646292     8.395863\n1255_g_at     3.952783     3.985398     3.863569     3.923745     3.815636\n1294_at       7.401377     8.252998     7.564053     7.009706     8.772693\n          GSM71035.CEL GSM71036.CEL GSM71037.CEL GSM71038.CEL GSM71039.CEL\n1007_s_at     8.986572    10.639548    10.054243     9.768019     9.328306\n1053_at       5.430052     5.587119     5.493452     5.633127     5.159921\n117_at        6.000733     6.187920     6.114563     7.011835     6.336885\n121_at        7.813381     8.752571     8.576715     8.254420     7.959826\n1255_g_at     3.813763     3.928739     3.942883     3.764742     4.097321\n1294_at       7.728379     7.553263     7.197903     8.149383     7.636171\n          GSM71040.CEL GSM71041.CEL GSM71042.CEL GSM71043.CEL GSM71044.CEL\n1007_s_at    10.196158    10.292591    10.320349     9.323106     9.628180\n1053_at       6.076057     5.338113     5.187639     5.955838     5.450218\n117_at        6.092187     6.088709     6.303387     5.888935     8.477193\n121_at        8.096221     8.158816     8.598261     7.389635     8.508515\n1255_g_at     3.774978     3.893144     4.065195     3.633987     3.967857\n1294_at       8.028049     7.684338     8.122264     7.019915     8.083954\n          GSM71045.CEL GSM71046.CEL GSM71047.CEL GSM71048.CEL GSM71049.CEL\n1007_s_at    10.493403    10.840534     9.368271    10.337764     9.803385\n1053_at       5.366804     5.437124     5.793530     5.247940     5.320422\n117_at        6.011152     5.903212     6.313240     5.729220     6.161011\n121_at        8.336089     7.792873     8.990317     8.976696     8.439951\n1255_g_at     3.836356     3.799026     4.054613     3.844070     4.202248\n1294_at       7.964711     7.862600     7.303318     8.013374     7.820776\n          GSM71050.CEL GSM71051.CEL GSM71052.CEL GSM71053.CEL GSM71054.CEL\n1007_s_at    10.158010     9.096022     9.287650     9.636696     9.911038\n1053_at       5.826067     5.265145     5.391201     5.677830     5.373810\n117_at        5.944079     6.727406     6.860623     5.862206     6.032169\n121_at        8.259074     8.992336     8.617814     8.373513     8.227620\n1255_g_at     3.865914     3.897634     4.019904     3.815712     3.841906\n1294_at       8.499586     7.015544     7.358916     7.885461     7.288989\n          GSM71055.CEL GSM71056.CEL GSM71058.CEL GSM71059.CEL GSM71060.CEL\n1007_s_at    10.505014    10.417704     9.911863    10.545780    10.131537\n1053_at       5.441140     5.579827     5.395288     5.524846     5.901671\n117_at        6.033868     6.077683     6.791961     6.157637     6.058080\n121_at        8.946566     8.505293     8.291846     8.214104     7.917774\n1255_g_at     4.017547     3.879476     3.890512     3.894170     3.547688\n1294_at       7.952671     7.490074     7.450992     8.086814     7.614454\n          GSM71061.CEL GSM71062.CEL GSM71063.CEL GSM71064.CEL GSM71065.CEL\n1007_s_at     9.712869    10.401919     8.763484     9.994538     9.790791\n1053_at       5.841468     5.656442     5.723440     5.727089     5.484076\n117_at        6.339688     5.648701     5.211550     6.177668     6.398325\n121_at        7.968398     8.835210     7.469142     8.256623     8.211274\n1255_g_at     3.831119     3.706997     3.668804     3.823414     4.164475\n1294_at       7.676996     8.290899     6.749402     8.355787     7.311462\n          GSM71066.CEL GSM71067.CEL GSM71068.CEL GSM71069.CEL GSM71070.CEL\n1007_s_at    10.292308    10.627200    10.582892    10.009028     9.912853\n1053_at       5.304608     5.491903     5.615926     5.151548     5.237126\n117_at        5.891567     6.383317     5.913488     5.904794     5.960948\n121_at        8.532695     8.016517     8.049998     8.407351     8.985741\n1255_g_at     3.824158     3.783804     3.775194     3.995371     4.322380\n1294_at       7.876914     8.554634     8.042399     7.680460     7.199866\n          GSM71071.CEL GSM71072.CEL GSM71073.CEL GSM71074.CEL GSM71075.CEL\n1007_s_at     9.096809     9.011927     8.396062     8.903465     9.501538\n1053_at       5.093278     5.353248     5.214357     5.251383     5.223598\n117_at        6.394089     6.425034     6.372520     6.095344     5.811968\n121_at        8.817789     8.866083     8.704385     9.375736     8.580523\n1255_g_at     4.141255     3.997644     4.219360     4.454771     4.188310\n1294_at       7.378438     7.354380     7.179849     7.143989     7.136764\n          GSM71076.CEL GSM71077.CEL\n1007_s_at     9.540766     9.039143\n1053_at       5.191392     5.235880\n117_at        6.007461     6.314809\n121_at        8.848099     9.663298\n1255_g_at     4.284053     4.877523\n1294_at       7.369991     6.992046\n```\n:::\n\n```{.r .cell-code}\n### Get the variable data\npheno <- pData(bladderEset)\nhead(pheno)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             sample outcome batch cancer\nGSM71019.CEL      1  Normal     3 Normal\nGSM71020.CEL      2  Normal     2 Normal\nGSM71021.CEL      3  Normal     2 Normal\nGSM71022.CEL      4  Normal     3 Normal\nGSM71023.CEL      5  Normal     3 Normal\nGSM71024.CEL      6  Normal     3 Normal\n```\n:::\n:::\n\n##\n\n## Adjusting batch effect using Linerar model\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- model.matrix(~as.factor(cancer) + as.factor(batch), data = pheno)\nfit <- lm.fit(mod, t(edata))\nhist(fit$coefficients[2, ], col = 4, breaks = 100)\n```\n\n::: {.cell-output-display}\n![](combat_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntable(pheno$cancer, pheno$batch)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        \n          1  2  3  4  5\n  Biopsy  0  0  0  5  4\n  Cancer 11 14  0  0 15\n  Normal  0  4  4  0  0\n```\n:::\n:::\n\n\n## Adjusting for batch effect with {Combat}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbatch <- pheno$batch\nmodcombat <- model.matrix(~1, data = pheno)\nmodcancer <- model.matrix(~cancer, data = pheno)\ncombat_edata <- ComBat(\n    dat = edata, \n    batch = batch,\n    mod = modcombat, \n    par.prior =  TRUE,\n    prior.plots = FALSE\n    )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nFound5batches\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAdjusting for0covariate(s) or covariate level(s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nStandardizing Data across genes\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nFitting L/S model and finding priors\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nFinding parametric adjustments\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAdjusting the Data\n```\n:::\n\n```{.r .cell-code}\ncombat_fit <- lm.fit(modcancer, t(combat_edata))\nhist(combat_fit$coefficients[2, ], col = 4, breaks = 100)\n```\n\n::: {.cell-output-display}\n![](combat_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Comparing the combat and linear adjustment\nWe can compare the estimated coefficients from Combat and linear adjustment by looking at the right coefficients for each model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(\n    fit$coefficients[2, ], combat_fit$coefficients[2, ],\n    col = 4, xlab = \"Linear Model\", ylab = \"Combat\",\n    xlim = c(-5, 5), ylim = c(-5, 5)\n)\nabline(c(0, 1), col = 2, lwd = 3)\n```\n\n::: {.cell-output-display}\n![](combat_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nnull device \n          1 \n```\n:::\n:::\n\n\n## Adjusting for batch effects with {sva}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- model.matrix(~cancer, data = pheno)\nmod0 <- model.matrix(~1, data = pheno)\nsva1 <- sva(edata, mod, mod0, n.sv = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of significant surrogate variables is:  2 \nIteration (out of 5 ):1  2  3  4  5  \n```\n:::\n\n```{.r .cell-code}\nsummary(lm(sva1$sv ~ pheno$batch))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nResponse Y1 :\n\nCall:\nlm(formula = Y1 ~ pheno$batch)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.26953 -0.11076  0.00787  0.10399  0.19069 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)\n(Intercept) -0.018470   0.038694  -0.477    0.635\npheno$batch  0.006051   0.011253   0.538    0.593\n\nResidual standard error: 0.1345 on 55 degrees of freedom\nMultiple R-squared:  0.00523,\tAdjusted R-squared:  -0.01286 \nF-statistic: 0.2891 on 1 and 55 DF,  p-value: 0.5929\n\n\nResponse Y2 :\n\nCall:\nlm(formula = Y2 ~ pheno$batch)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.23973 -0.07467 -0.02157  0.08116  0.25629 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.121112   0.034157   3.546 0.000808 ***\npheno$batch -0.039675   0.009933  -3.994 0.000194 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1187 on 55 degrees of freedom\nMultiple R-squared:  0.2248,\tAdjusted R-squared:  0.2107 \nF-statistic: 15.95 on 1 and 55 DF,  p-value: 0.0001945\n```\n:::\n\n```{.r .cell-code}\nboxplot(sva1$sv[, 2] ~ pheno$batch)\npoints(sva1$sv[, 2] ~ jitter(as.numeric(pheno$batch)), col = as.numeric(pheno$batch))\n```\n\n::: {.cell-output-display}\n![](combat_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n### Add the surrogate variables to model matrix and perfom the model fit\nmodsv  <-  cbind(mod, sva1$sv)\nfitsv <- lm.fit(modsv, t(edata))\n\n### Compare the fit from surrogate variable analysis to the other two\npar(mfrow=c(1,2))\nplot(fitsv$coefficients[2,],combat_fit$coefficients[2,],col=2,\n      xlab=\"SVA\",ylab=\"Combat\",xlim=c(-5,5),ylim=c(-5,5))\nabline(c(0,1),col=1,lwd=3)\nplot(fitsv$coefficients[2,], fit$coefficients[2,],col=2,\n      xlab=\"SVA\",ylab=\"linear model\",xlim=c(-5,5),ylim=c(-5,5))\nabline(c(0,1),col=1,lwd=3)\n```\n\n::: {.cell-output-display}\n![](combat_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n## Principal components for population structure\n\n\n",
    "supporting": [
      "combat_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}