{
  "hash": "2e0a5a9f6d3fffdd181da94d2dcbfaed",
  "result": {
    "markdown": "---\ntitle: \"Perform Principal Component Analysis\"\ndate: 2023-05-17\n# date-modified: 2023-04-05\ncategories:\n  - r\n  - pca\n  - unsupervised\n  - dimensional reduction\nimage: p.png\ndescription: Principle component methods are used to summarize and viusalize the information contained in a large multivariate datasets.\n---\n\n\n\n![](pca.png)\n\n\n\nPrinciple component analysis is used to extract the important information from a multivariate data table and to express this information as a set of few new variables called principle components. These new variables correspond to a linear combination of the originals. The number of principal components is less than or equal to the number of original variables.\n\nPCA assumes that the directions with the largest variances are the most “important” (i.e, the most principal).\n\nTechnically speaking, the amount of variance retained by each principal component is measured by the so-called eigenvalue.\n\nNote that, the PCA method is particularly useful when the variables within the data set are highly correlated. Correlation indicates that there is redundancy in the data. Due to this redundancy, PCA can be used to reduce the original variables into a smaller number of new variables ( = principal components) explaining most of the variance in the original variables.\n\n\n\nTaken together, the main purpose of principal component analysis is to:\n\n  - identify hidden pattern in a data set,\n  - reduce the dimensionnality of the data by removing the noise and redundancy in the data,\n  - identify correlated variables\n\n![](pca2.png)\n\n## Compute PCA\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### Load packages\nlibrary(pacman)\np_load(\n    tidyverse,  # tidy data\n    FactoMineR, # compute principal component methods\n    factoextra,  # extract, visualize and interpretate the results\n    corrplot  # visualize cos2 of variables\n)\n\n### subset active individuals and active variables\ndata(decathlon2)\ndecathlon2_active <- decathlon2[1:23, 1:10]\nhead(decathlon2_active[, 1:6], 4)\n##         X100m Long.jump Shot.put High.jump X400m X110m.hurdle\n## SEBRLE  11.04      7.58    14.83      2.07 49.81        14.69\n## CLAY    10.76      7.40    14.26      1.86 49.37        14.05\n## BERNARD 11.02      7.23    14.25      1.92 48.93        14.99\n## YURKOV  11.34      7.09    15.19      2.10 50.42        15.31\n\n### compute pca\nres_pca <- PCA(decathlon2_active, graph = FALSE)\nres_pca\n## **Results for the Principal Component Analysis (PCA)**\n## The analysis was performed on 23 individuals, described by 10 variables\n## *The results are available in the following objects:\n## \n##    name               description                          \n## 1  \"$eig\"             \"eigenvalues\"                        \n## 2  \"$var\"             \"results for the variables\"          \n## 3  \"$var$coord\"       \"coord. for the variables\"           \n## 4  \"$var$cor\"         \"correlations variables - dimensions\"\n## 5  \"$var$cos2\"        \"cos2 for the variables\"             \n## 6  \"$var$contrib\"     \"contributions of the variables\"     \n## 7  \"$ind\"             \"results for the individuals\"        \n## 8  \"$ind$coord\"       \"coord. for the individuals\"         \n## 9  \"$ind$cos2\"        \"cos2 for the individuals\"           \n## 10 \"$ind$contrib\"     \"contributions of the individuals\"   \n## 11 \"$call\"            \"summary statistics\"                 \n## 12 \"$call$centre\"     \"mean of the variables\"              \n## 13 \"$call$ecart.type\" \"standard error of the variables\"    \n## 14 \"$call$row.w\"      \"weights for the individuals\"        \n## 15 \"$call$col.w\"      \"weights for the variables\"\n```\n:::\n\n\n\n## Variances\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### eigenvalues measure the amount of variation retained by each principal component\neig_val <- get_eigenvalue(res_pca)\neig_val\n##        eigenvalue variance.percent cumulative.variance.percent\n## Dim.1   4.1242133        41.242133                    41.24213\n## Dim.2   1.8385309        18.385309                    59.62744\n## Dim.3   1.2391403        12.391403                    72.01885\n## Dim.4   0.8194402         8.194402                    80.21325\n## Dim.5   0.7015528         7.015528                    87.22878\n## Dim.6   0.4228828         4.228828                    91.45760\n## Dim.7   0.3025817         3.025817                    94.48342\n## Dim.8   0.2744700         2.744700                    97.22812\n## Dim.9   0.1552169         1.552169                    98.78029\n## Dim.10  0.1219710         1.219710                   100.00000\n\n### scree plot to visualize the eigenvalues\nfviz_eig(res_pca, addlabels = TRUE, ylim = c(0, 50))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Variables\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### graph of variables\nvar <- get_pca_var(res_pca)\nvar\n## Principal Component Analysis Results for variables\n##  ===================================================\n##   Name       Description                                    \n## 1 \"$coord\"   \"Coordinates for the variables\"                \n## 2 \"$cor\"     \"Correlations between variables and dimensions\"\n## 3 \"$cos2\"    \"Cos2 for the variables\"                       \n## 4 \"$contrib\" \"contributions of the variables\"\n### coordinates of variables to create a scatter plot\nhead(var$coord)\n##                   Dim.1       Dim.2      Dim.3       Dim.4      Dim.5\n## X100m        -0.8506257 -0.17939806  0.3015564  0.03357320 -0.1944440\n## Long.jump     0.7941806  0.28085695 -0.1905465 -0.11538956  0.2331567\n## Shot.put      0.7339127  0.08540412  0.5175978  0.12846837 -0.2488129\n## High.jump     0.6100840 -0.46521415  0.3300852  0.14455012  0.4027002\n## X400m        -0.7016034  0.29017826  0.2835329  0.43082552  0.1039085\n## X110m.hurdle -0.7641252 -0.02474081  0.4488873 -0.01689589  0.2242200\n\n### represents the quality of representation for variables on the factor map. \n### It’s calculated as the squared coordinates: var.cos2 = var.coord * var.coord.\nhead(var$cos2)\n##                  Dim.1        Dim.2      Dim.3        Dim.4      Dim.5\n## X100m        0.7235641 0.0321836641 0.09093628 0.0011271597 0.03780845\n## Long.jump    0.6307229 0.0788806285 0.03630798 0.0133147506 0.05436203\n## Shot.put     0.5386279 0.0072938636 0.26790749 0.0165041211 0.06190783\n## High.jump    0.3722025 0.2164242070 0.10895622 0.0208947375 0.16216747\n## X400m        0.4922473 0.0842034209 0.08039091 0.1856106269 0.01079698\n## X110m.hurdle 0.5838873 0.0006121077 0.20149984 0.0002854712 0.05027463\n\n### contains the contributions (in percentage) of the variables to the principal components. \n### The contribution of a variable (var) to a given principal component is (in percentage) : (var.cos2 * 100) / (total cos2 of the component).\nhead(var$contrib)\n##                  Dim.1      Dim.2     Dim.3       Dim.4     Dim.5\n## X100m        17.544293  1.7505098  7.338659  0.13755240  5.389252\n## Long.jump    15.293168  4.2904162  2.930094  1.62485936  7.748815\n## Shot.put     13.060137  0.3967224 21.620432  2.01407269  8.824401\n## High.jump     9.024811 11.7715838  8.792888  2.54987951 23.115504\n## X400m        11.935544  4.5799296  6.487636 22.65090599  1.539012\n## X110m.hurdle 14.157544  0.0332933 16.261261  0.03483735  7.166193\n\n### plot variables. it shows the relationship between all variables\nfviz_pca_var(res_pca, col.var = \"black\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### quality of representation\nhead(var$cos2, 4)\n##               Dim.1       Dim.2      Dim.3      Dim.4      Dim.5\n## X100m     0.7235641 0.032183664 0.09093628 0.00112716 0.03780845\n## Long.jump 0.6307229 0.078880629 0.03630798 0.01331475 0.05436203\n## Shot.put  0.5386279 0.007293864 0.26790749 0.01650412 0.06190783\n## High.jump 0.3722025 0.216424207 0.10895622 0.02089474 0.16216747\ncorrplot(var$cos2, is.corr=FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-2.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### bar plot total cos2 of variables on Dim.1 and Dim.2\nfviz_cos2(res_pca, choice = \"var\", axes = 1:2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-3.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### Color by cos2 values: quality on the factor map\nfviz_pca_var(\n  res_pca, \n  col.var = \"cos2\",\n  gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n  repel = TRUE # Avoid text overlapping\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-4.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### Change the transparency by cos2 values\nfviz_pca_var(res_pca, alpha.var = \"cos2\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-5.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### contribution of variables to PCs\nhead(var$contrib, 4)\n##               Dim.1      Dim.2     Dim.3     Dim.4     Dim.5\n## X100m     17.544293  1.7505098  7.338659 0.1375524  5.389252\n## Long.jump 15.293168  4.2904162  2.930094 1.6248594  7.748815\n## Shot.put  13.060137  0.3967224 21.620432 2.0140727  8.824401\n## High.jump  9.024811 11.7715838  8.792888 2.5498795 23.115504\n\n### highlight the most contributing variables for each dimension\ncorrplot(var$contrib, is.corr=FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-6.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n# Contributions of variables to PC1\nfviz_contrib(res_pca, choice = \"var\", axes = 1, top = 10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-7.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n# Contributions of variables to PC2\nfviz_contrib(res_pca, choice = \"var\", axes = 2, top = 10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-8.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### total contribution to PC1 and PC2 \nfviz_contrib(res_pca, choice = \"var\", axes = 1:2, top = 10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-9.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### highlight most important variables on the correlation plot\nfviz_pca_var(\n  res_pca, \n  col.var = \"contrib\",\n  gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\")\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-10.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### Change the transparency by contrib values\nfviz_pca_var(res_pca, alpha.var = \"contrib\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-11.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### color variables by custom continus variable\n# Create a random continuous variable of length 10\nset.seed(123)\nmy_cont_var <- rnorm(10)\n### Color variables by the continuous variable\nfviz_pca_var(\n  res_pca, \n  col.var = my_cont_var,\n  gradient.cols = c(\"blue\", \"yellow\", \"red\"),\n  legend.title = \"Cont.Var\"\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-12.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### color by groups, create a grouping variables using kmeans\nset.seed(123)\nres_km <- kmeans(var$coord, centers = 3, nstart = 25)\ngrp <- as.factor(res_km$cluster)\n\n# Color variables by groups\nfviz_pca_var(\n  res_pca, \n  col.var = grp, \n  palette = c(\"#0073C2FF\", \"#EFC000FF\", \"#868686FF\"),\n  legend.title = \"Cluster\"\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-13.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### dimension description\nres_desc <- dimdesc(res_pca, axes = c(1,2), proba = 0.05)\n# Description of dimension 1\nres_desc$Dim.1\n## \n## Link between the variable and the continuous variables (R-square)\n## =================================================================================\n##              correlation      p.value\n## Long.jump      0.7941806 6.059893e-06\n## Discus         0.7432090 4.842563e-05\n## Shot.put       0.7339127 6.723102e-05\n## High.jump      0.6100840 1.993677e-03\n## Javeline       0.4282266 4.149192e-02\n## X400m         -0.7016034 1.910387e-04\n## X110m.hurdle  -0.7641252 2.195812e-05\n## X100m         -0.8506257 2.727129e-07\n# Description of dimension 2\nres_desc$Dim.2\n## \n## Link between the variable and the continuous variables (R-square)\n## =================================================================================\n##            correlation      p.value\n## Pole.vault   0.8074511 3.205016e-06\n## X1500m       0.7844802 9.384747e-06\n## High.jump   -0.4652142 2.529390e-02\n```\n:::\n\n\n## Individuals\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### extract results for individuals\nind <- get_pca_ind(res_pca)\nind\n## Principal Component Analysis Results for individuals\n##  ===================================================\n##   Name       Description                       \n## 1 \"$coord\"   \"Coordinates for the individuals\" \n## 2 \"$cos2\"    \"Cos2 for the individuals\"        \n## 3 \"$contrib\" \"contributions of the individuals\"\n# Coordinates of individuals\nhead(ind$coord)\n##                Dim.1      Dim.2      Dim.3       Dim.4       Dim.5\n## SEBRLE     0.1955047  1.5890567  0.6424912  0.08389652  1.16829387\n## CLAY       0.8078795  2.4748137 -1.3873827  1.29838232 -0.82498206\n## BERNARD   -1.3591340  1.6480950  0.2005584 -1.96409420  0.08419345\n## YURKOV    -0.8889532 -0.4426067  2.5295843  0.71290837  0.40782264\n## ZSIVOCZKY -0.1081216 -2.0688377 -1.3342591 -0.10152796 -0.20145217\n## McMULLEN   0.1212195 -1.0139102 -0.8625170  1.34164291  1.62151286\n### Quality of individuals\nhead(ind$cos2)\n##                 Dim.1      Dim.2       Dim.3       Dim.4        Dim.5\n## SEBRLE    0.007530179 0.49747323 0.081325232 0.001386688 0.2689026575\n## CLAY      0.048701249 0.45701660 0.143628117 0.125791741 0.0507850580\n## BERNARD   0.197199804 0.28996555 0.004294015 0.411819183 0.0007567259\n## YURKOV    0.096109800 0.02382571 0.778230322 0.061812637 0.0202279796\n## ZSIVOCZKY 0.001574385 0.57641944 0.239754152 0.001388216 0.0054654972\n## McMULLEN  0.002175437 0.15219499 0.110137872 0.266486530 0.3892621478\n### Contributions of individuals\nhead(ind$contrib)\n##                Dim.1      Dim.2      Dim.3       Dim.4       Dim.5\n## SEBRLE    0.04029447  5.9714533  1.4483919  0.03734589  8.45894063\n## CLAY      0.68805664 14.4839248  6.7537381  8.94458283  4.21794385\n## BERNARD   1.94740183  6.4234107  0.1411345 20.46819433  0.04393073\n## YURKOV    0.83308415  0.4632733 22.4517396  2.69663605  1.03075263\n## ZSIVOCZKY 0.01232413 10.1217143  6.2464325  0.05469230  0.25151025\n## McMULLEN  0.01549089  2.4310854  2.6102794  9.55055888 16.29493304\n\n### quality and contribution\n### individuals that are similar are grouped together on the plot\nfviz_pca_ind(\n  res_pca, \n  col.ind = \"cos2\", \n  gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n  repel = TRUE # Avoid text overlapping (slow if many points)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### change the point size according to the cos2 of corresponding individuals\nfviz_pca_ind(\n  res_pca, \n  pointsize = \"cos2\", \n  pointshape = 21, \n  fill = \"#E7B800\",\n  repel = TRUE # Avoid text overlapping (slow if many points)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-2.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### change both point size and color by cos2\nfviz_pca_ind(\n  res_pca, \n  col.ind = \"cos2\", \n  pointsize = \"cos2\",\n  gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n  repel = TRUE # Avoid text overlapping (slow if many points)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-3.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### total contribution on PC1 and PC2\nfviz_contrib(res_pca, choice = \"ind\", axes = 1:2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-4.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\n### color by custom continus variable\nset.seed(123)\nmy_cont_var <- rnorm(23)\n# Color individuals by the continuous variable\nfviz_pca_ind(\n  res_pca, \n  col.ind = my_cont_var,\n  gradient.cols = c(\"blue\", \"yellow\", \"red\"),\n  legend.title = \"Cont.Var\"\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-5.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Other Dimensions\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### visualize variables/individuals on dimension 2 and 3\n\n# Variables on dimensions 2 and 3\nfviz_pca_var(res_pca, axes = c(2, 3))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n# Individuals on dimensions 2 and 3\nfviz_pca_ind(res_pca, axes = c(2, 3))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\n## Reference\n\n- [Principal Component Methods in R: Practical Guide](http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/112-pca-principal-component-analysis-essentials/)\n- [Factoextra R Package: Easy Multivariate Data Analyses and Elegant Visualization](https://www.r-bloggers.com/2017/02/factoextra-r-package-easy-multivariate-data-analyses-and-elegant-visualization/)\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}