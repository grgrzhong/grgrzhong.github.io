{
  "hash": "745d1cd0a12e2c86c1aeaf3938a03fae",
  "result": {
    "markdown": "---\ntitle: \"Add p-values onto basic barplot or boxplot\"\ndate: 2023-03-30\ncategories:\n  - r\n  - ggplot2\n  - p-value\nimage: plot.png\n---\n\n\n\nHow to compute and add p-values to basic ggplots using the rstatix and the ggpubr R packages.\n\n- Perform pairwise mean comparisons and add the p-values onto basic box plots and bar plots.\n- Display adjusted p-values and the significance levels onto the plots\n- Format the p-value labels\n- Specify manually the y position of p-value labels and shorten the width of the brackets\n\n\n:::{.callout-note}\n1. Compute easily statistical tests (`t_test()` or `wilcox_test()`) using the `rstatix` package\n2. Auto-compute p-value label positions using the function `add_xy_position()` [in rstatix package].\n3. Add the p-values to the plot using the function `stat_pvalue_manual()` [in ggpubr package]. The following key options are illustrated in some of the examples:\n- The option `bracket.nudge.y` is used to move up or to move down the brackets.\n- The option `step.increase` is used to add more space between brackets.\n- The option `vjust` is used to vertically adjust the position of the p-values labels\n\n4. In some situations, the p-value labels are partially hidden by the plot top border. In these cases, the ggplot2 function `scale_y_continuous(expand = expansion(mult = c(0, 0.1)))` can be used to add more spaces between labels and the plot top border. The option mult = c(0, 0.1) indicates that 0% and 10% spaces are respectively added at the bottom and the top of the plot. \n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggpubr)         # creat easily publication plots\nlibrary(rstatix)        # pipe-friendly tools for easy statistical analyses\nlibrary(patchwork)\n```\n:::\n\n\n\n\n## Basic Barplot or Boxplot with p-value\n\n### Comparing two means\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Transform `dose` into factor variable\ndf <- ToothGrowth\ndf$dose <- as.factor(df$dose)\nhead(df, 3)\n##    len supp dose\n## 1  4.2   VC  0.5\n## 2 11.5   VC  0.5\n## 3  7.3   VC  0.5\n\n### statistical test to compare two independent groups\n\nstat_test <- df %>% \n    t_test(len ~ supp) %>%\n    add_significance() %>% \n    add_xy_position(x = \"supp\")\n\nstat_test\n## # A tibble: 1 × 13\n##   .y.   group1 group2    n1    n2 statistic    df      p p.signif y.position\n##   <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl>  <dbl> <chr>         <dbl>\n## 1 len   OJ     VC        30    30      1.92  55.3 0.0606 ns             34.3\n## # ℹ 3 more variables: groups <named list>, xmin <dbl>, xmax <dbl>\n\np1 <- ggboxplot(df, x = \"supp\", y = \"len\", fill = \"#00AFBB\") +\n    stat_pvalue_manual(stat_test, label = \"p\")\n\n### Customize p-value labels using glue expression\np2 <- ggboxplot(df, x = \"supp\", y = \"len\", fill = \"#00AFBB\") +\n    stat_pvalue_manual(\n        stat_test, \n        label = \"T-test, p = {p}\", \n        vjust = -1, #vertically adjust the position of the p-values labels \n        bracket.nudge.y = 1 # move up or to move down the brackets. \n        ) +\n    scale_y_continuous(expand = expansion(mult = c(0.05, 0.15)))\np1 + p2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### grouped data\nstat_test <- df %>%\n    group_by(dose) %>%\n    t_test(len ~ supp) %>%\n    adjust_pvalue() %>%\n    add_significance() %>% \n    add_xy_position(x = \"supp\")\n\nstat_test\n## # A tibble: 3 × 15\n##   dose  .y.   group1 group2    n1    n2 statistic    df       p   p.adj\n##   <fct> <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl>   <dbl>   <dbl>\n## 1 0.5   len   OJ     VC        10    10    3.17    15.0 0.00636 0.0127 \n## 2 1     len   OJ     VC        10    10    4.03    15.4 0.00104 0.00312\n## 3 2     len   OJ     VC        10    10   -0.0461  14.0 0.964   0.964  \n## # ℹ 5 more variables: p.adj.signif <chr>, y.position <dbl>,\n## #   groups <named list>, xmin <dbl>, xmax <dbl>\n\nggboxplot(df,\n    x = \"supp\", y = \"len\", fill = \"#00AFBB\",\n    facet.by = \"dose\"\n    ) +\n    stat_pvalue_manual(stat_test, label = \"p.adj\") +\n    scale_y_continuous(expand = expansion(mult = c(0.05, 0.10)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### Show p-values if significant otherwise show ns\nstat_test <- df %>%\n    group_by(dose) %>%\n    t_test(len ~ supp) %>%\n    adjust_pvalue() %>%\n    add_significance() %>%\n    add_xy_position(\"supp\")\n\nstat_test$custom_label <- ifelse(stat_test$p.adj <= 0.05, stat_test$p.adj, \"ns\")\n\nstat_test\n## # A tibble: 3 × 16\n##   dose  .y.   group1 group2    n1    n2 statistic    df       p   p.adj\n##   <fct> <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl>   <dbl>   <dbl>\n## 1 0.5   len   OJ     VC        10    10    3.17    15.0 0.00636 0.0127 \n## 2 1     len   OJ     VC        10    10    4.03    15.4 0.00104 0.00312\n## 3 2     len   OJ     VC        10    10   -0.0461  14.0 0.964   0.964  \n## # ℹ 6 more variables: p.adj.signif <chr>, y.position <dbl>,\n## #   groups <named list>, xmin <dbl>, xmax <dbl>, custom_label <chr>\n\nggboxplot(df,\n    x = \"supp\", y = \"len\", fill = \"#00AFBB\",\n    facet.by = \"dose\"\n    ) +\n    stat_pvalue_manual(stat_test, label = \"custom_label\") +\n    scale_y_continuous(expand = expansion(mult = c(0.05, 0.10)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### Compare paired samples\n# Statistical test\nstat_test <- df %>%\n  t_test(len ~ supp, paired = TRUE) %>%\n  add_significance() %>% \n  add_xy_position(x = \"supp\")\n\n### boxplot with pvalue\np1 <- ggpaired(df, x = \"supp\", y = \"len\", fill = \"#E7B800\",\n                 line.color = \"gray\", line.size = 0.4)+\n                 stat_pvalue_manual(stat_test, label = \"p.signif\")+\n                 scale_y_continuous(expand = expansion(mult = c(0.05, 0.10)))\n\n### combined with significane level\np2 <- ggpaired(df,\n    x = \"supp\", y = \"len\", fill = \"#E7B800\",\n    line.color = \"gray\", line.size = 0.4\n) +\n    stat_pvalue_manual(stat_test, label = \"{p}{p.signif}\") +\n    scale_y_continuous(expand = expansion(mult = c(0.05, 0.10)))\n\np1 + p2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=672}\n:::\n:::\n\n### Pairwise comparisons\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n### boxplot\nstat_test <- df %>% t_test(len ~ dose) %>% \n    add_xy_position(x = \"dose\")\n\nbxp <- ggboxplot(df,\n    x = \"dose\", y = \"len\", fill = \"dose\",\n    palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\") # Box plots\n    ) + \n    stat_pvalue_manual(\n      stat_test,\n      label = \"p.adj.signif\",\n      tip.length = 0.01\n)\n\n### Specify manually the y position of p-value labels and shorten the width of the brackets\nbxp_man <- bxp + \n  stat_pvalue_manual(\n    stat_test, label = \"p.adj.signif\", tip.length = 0.01,\n    y.position = c(35, 40, 35), bracket.shorten = 0.05\n    )\n\n### Bar plot\nstat_test <- df %>% \n    t_test(len ~ dose) %>%  \n    add_xy_position(fun = \"mean_sd\", x = \"dose\")\n\n# Bar plots showing mean +/- SD\nbp <- ggbarplot(df,\n        x = \"dose\", y = \"len\", add = \"mean_sd\", fill = \"dose\",\n        palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\")\n    ) +\n    stat_pvalue_manual(\n        stat_test, \n        label = \"p.adj.signif\", \n        tip.length = 0.01\n        )\n\nbxp + bxp_man + bp\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n### Comparsions against reference groups\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstat_test <- df %>% \n    t_test(len ~ dose, ref.group = \"0.5\") %>% \n    add_xy_position(x = \"dose\")\n\nbxp <- ggboxplot(df,\n    x = \"dose\", y = \"len\", fill = \"dose\",\n    palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\") # Box plots\n    ) + \n    stat_pvalue_manual(\n      stat_test,\n      label = \"p.adj.signif\",\n      tip.length = 0.01\n)\n\nbp <- ggbarplot(df,\n        x = \"dose\", y = \"len\", add = \"mean_sd\", fill = \"dose\",\n        palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\")\n    ) +\n    stat_pvalue_manual(\n        stat_test, \n        label = \"p.adj.signif\", \n        tip.length = 0.01\n        )\n\nbxp + bp\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n### Comparsions against all (basemean)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstat_test <- df %>% \n    t_test(len ~ dose, ref.group = \"all\") %>% \n    add_xy_position(x = \"dose\") \n\nbxp <- ggboxplot(df,\n    x = \"dose\", y = \"len\", fill = \"dose\",\n    palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\") # Box plots\n) +\n    stat_pvalue_manual(\n        stat_test,\n        label = \"p.adj.signif\",\n        y.position = 35\n    )\n\nstat_test <- df %>% \n    t_test(len ~ dose, ref.group = \"all\") %>% \n    add_xy_position(fun = \"mean_sd\", x = \"dose\")\n\nbp <- ggbarplot(df,\n    x = \"dose\", y = \"len\", add = \"mean_sd\", fill = \"dose\",\n    palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\")\n) +\n    stat_pvalue_manual(\n        stat_test,\n        label = \"p.adj.signif\"\n\n    )\n\nbxp + bp\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n## Add p-values to horizontal ggplots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Transform `dose` into factor variable\ndf <- ToothGrowth\ndf$dose <- as.factor(df$dose)\n\nhead(df, 3)\n##    len supp dose\n## 1  4.2   VC  0.5\n## 2 11.5   VC  0.5\n## 3  7.3   VC  0.5\n\nstat_test <- df %>% \n    t_test(len ~ dose) %>%\n    add_significance() %>% \n    add_xy_position(x = \"dose\")\n\nstat_test\n## # A tibble: 3 × 14\n##   .y.   group1 group2    n1    n2 statistic    df        p    p.adj p.adj.signif\n##   <chr> <chr>  <chr>  <int> <int>     <dbl> <dbl>    <dbl>    <dbl> <chr>       \n## 1 len   0.5    1         20    20     -6.48  38.0 1.27e- 7 2.54e- 7 ****        \n## 2 len   0.5    2         20    20    -11.8   36.9 4.40e-14 1.32e-13 ****        \n## 3 len   1      2         20    20     -4.90  37.1 1.91e- 5 1.91e- 5 ****        \n## # ℹ 4 more variables: y.position <dbl>, groups <named list>, xmin <dbl>,\n## #   xmax <dbl>\n\n# Box plots\nggboxplot(df,\n    x = \"dose\", y = \"len\", fill = \"dose\",\n    palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\")\n) +\n    stat_pvalue_manual(\n        stat_test,\n        # use the adjusted p-value significance levels as labels\n        label = \"p.adj.signif\", tip.length = 0.01,\n        coord.flip = TRUE\n    ) +\n    coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n\nggboxplot(df,\n    x = \"dose\", y = \"len\", fill = \"dose\",\n    palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\")\n) +\n    stat_pvalue_manual(\n        stat_test,\n        ### use adjusted p-values as labels\n        label = \"p.adj\", tip.length = 0.01,\n        coord.flip = TRUE\n    ) +\n    coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\n## Reference\n\n1. [How to Add P-Values onto Basic GGPLOTS](https://www.datanovia.com/en/blog/how-to-add-p-values-onto-basic-ggplots/)\n2. [How to Add P-Values onto Horizontal GGPLOTS](https://www.datanovia.com/en/blog/how-to-add-p-values-onto-horizontal-ggplots/)\n3. [How to Add P-Values onto a Grouped GGPLOT using the GGPUBR R Package](https://www.datanovia.com/en/blog/how-to-add-p-values-onto-a-grouped-ggplot-using-the-ggpubr-r-package/)\n4. [How to Add P-values to GGPLOT Facets](https://www.datanovia.com/en/blog/how-to-add-p-values-to-ggplot-facets/)\n5. [Add P-values to GGPLOT Facets with Different Scales](https://www.datanovia.com/en/blog/add-p-values-to-ggplot-facets-with-different-scales/) \n6. [GGPUBR: How to Add P-Values Generated Elsewhere to a GGPLOT](https://www.datanovia.com/en/blog/ggpubr-how-to-add-p-values-generated-elsewhere-to-a-ggplot/)\n7. [GGPLOT Facet: How to Add Space Between Labels on the Top of the Chart and the Plot Border](https://www.datanovia.com/en/blog/ggplot-facet-how-to-add-space-between-labels-on-the-top-of-the-chart-and-the-plot-border/)\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}